#
# Copyright (c) 2024, NVIDIA CORPORATION.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# NOTE: This code is auto-generated by generate_nvml_stubs.py
# DO NOT EDIT MANUALLY


# pylint: skip-file
# skip linting for generated file
global nvml_injection_usable
try:
    from dcgm_nvml import *
    from ctypes import *

    class c_nvmlProcessInfo_v1_t(Structure):
        _fields_ = [
            ("pid", c_uint),
            ("usedGpuMemory", c_ulonglong),
        ]

    class c_simpleValue_t(Union):
        _fields_ = [
            ("c", c_char),
            ("str", c_void_p),
            ("const_str", c_void_p),
            ("cnPtr", c_void_p),
            ("i", c_int),
            ("iPtr", c_void_p),
            ("accountingStats", c_nvmlAccountingStats_t),
            ("accountingStatsPtr", c_void_p),
            ("bar1Memory", c_nvmlBAR1Memory_t),
            ("bar1MemoryPtr", c_void_p),
            ("brandType", c_int),
            ("brandTypePtr", c_void_p),
            ("bridgeChipHierarchy", c_nvmlBridgeChipHierarchy_t),
            ("bridgeChipHierarchyPtr", c_void_p),
            ("clockId", c_int),
            ("clockType", c_int),
            ("computeInstanceInfo", c_nvmlComputeInstanceInfo_t),
            ("computeInstanceInfoPtr", c_void_p),
            ("computeInstanceProfileInfo", c_nvmlComputeInstanceProfileInfo_t),
            ("computeInstanceProfileInfoPtr", c_void_p),
            ("computeInstanceProfileInfo_v2", c_nvmlComputeInstanceProfileInfo_v2_t),
            ("computeInstanceProfileInfo_v2Ptr", c_void_p),
            ("computeInstance", c_nvmlComputeInstance_t),
            ("computeInstancePtr", c_void_p),
            ("computeMode", c_int),
            ("computeModePtr", c_void_p),
            ("confComputeSystemState", c_nvmlConfComputeSystemState_t),
            ("confComputeSystemStatePtr", c_void_p),
            ("detachGpuState", c_int),
            ("deviceAttributes", c_nvmlDeviceAttributes),
            ("deviceAttributesPtr", c_void_p),
            ("device", c_nvmlDevice_t),
            ("devicePtr", c_void_p),
            ("driverModel", c_int),
            ("driverModelPtr", c_void_p),
            ("eccCounterType", c_int),
            ("eccErrorCounts", c_nvmlEccErrorCounts_t),
            ("eccErrorCountsPtr", c_void_p),
            ("enableState", c_int),
            ("enableStatePtr", c_void_p),
            ("encoderSessionInfo", c_nvmlEncoderSession_t),
            ("encoderSessionInfoPtr", c_void_p),
            ("encoderType", c_int),
            ("eventData", c_nvmlEventData_t),
            ("eventDataPtr", c_void_p),
            ("eventSet", c_nvmlEventSet_t),
            ("eventSetPtr", c_void_p),
            ("excludedDeviceInfo", c_nvmlExcludedDeviceInfo_t),
            ("excludedDeviceInfoPtr", c_void_p),
            ("fBCSessionInfo", c_nvmlFBCSession_t),
            ("fBCSessionInfoPtr", c_void_p),
            ("fBCStats", c_nvmlFBCStats_t),
            ("fBCStatsPtr", c_void_p),
            ("fieldValue", c_nvmlFieldValue_t),
            ("fieldValuePtr", c_void_p),
            ("gpmMetricsGet", c_nvmlGpmMetricsGet_t),
            ("gpmMetricsGetPtr", c_void_p),
            ("gpmSample", c_nvmlGpmSample_t),
            ("gpmSamplePtr", c_void_p),
            ("gpmSupport", c_nvmlGpmSupport_t),
            ("gpmSupportPtr", c_void_p),
            ("gpuDynamicPstatesInfo", c_nvmlGpuDynamicPstatesInfo_t),
            ("gpuDynamicPstatesInfoPtr", c_void_p),
            ("gpuInstanceInfo", c_nvmlGpuInstanceInfo_t),
            ("gpuInstanceInfoPtr", c_void_p),
            ("gpuInstancePlacement", c_nvmlGpuInstancePlacement_t),
            ("gpuInstancePlacementPtr", c_void_p),
            ("gpuInstanceProfileInfo", c_nvmlGpuInstanceProfileInfo_t),
            ("gpuInstanceProfileInfoPtr", c_void_p),
            ("gpuInstanceProfileInfo_v2", c_nvmlGpuInstanceProfileInfo_v2_t),
            ("gpuInstanceProfileInfo_v2Ptr", c_void_p),
            ("gpuInstance", c_nvmlGpuInstance_t),
            ("gpuInstancePtr", c_void_p),
            ("gpuOperationMode", c_int),
            ("gpuOperationModePtr", c_void_p),
            ("gpuP2PCapsIndex", c_int),
            ("gpuP2PStatus", c_int),
            ("gpuP2PStatusPtr", c_void_p),
            ("gpuThermalSettings", c_nvmlGpuThermalSettings_t),
            ("gpuThermalSettingsPtr", c_void_p),
            ("gpuTopologyLevel", c_int),
            ("gpuTopologyLevelPtr", c_void_p),
            ("gpuVirtualizationMode", c_int),
            ("gpuVirtualizationModePtr", c_void_p),
            ("gridLicensableFeatures", c_nvmlGridLicensableFeatures_t),
            ("gridLicensableFeaturesPtr", c_void_p),
            ("hostVgpuMode", c_int),
            ("hostVgpuModePtr", c_void_p),
            ("hwbcEntry", c_nvmlHwbcEntry_t),
            ("hwbcEntryPtr", c_void_p),
            ("inforomObject", c_int),
            ("intNvLinkDeviceType", c_int),
            ("intNvLinkDeviceTypePtr", c_void_p),
            ("ledColor", c_int),
            ("ledState", c_nvmlLedState_t),
            ("ledStatePtr", c_void_p),
            ("memoryErrorType", c_int),
            ("memoryLocation", c_int),
            ("memory", c_nvmlMemory_t),
            ("memoryPtr", c_void_p),
            ("memory_v2", c_nvmlMemory_v2_t),
            ("memory_v2Ptr", c_void_p),
            ("nvLinkCapability", c_int),
            ("nvLinkErrorCounter", c_int),
            ("nvLinkUtilizationControl", nvmlNvLinkUtilizationControl_t),
            ("nvLinkUtilizationControlPtr", c_void_p),
            ("pSUInfo", c_nvmlPSUInfo_t),
            ("pSUInfoPtr", c_void_p),
            ("pageRetirementCause", c_int),
            ("pciInfo", nvmlPciInfo_t),
            ("pciInfoPtr", c_void_p),
            ("pcieLinkState", c_int),
            ("pcieUtilCounter", c_int),
            ("perfPolicyType", c_int),
            ("processInfo", c_nvmlProcessInfo_t),
            ("processInfoPtr", c_void_p),
            ("processInfo_v1", c_nvmlProcessInfo_v1_t),
            ("processInfo_v1Ptr", c_void_p),
            ("processInfo_v2", c_nvmlProcessInfo_v2_t),
            ("processInfo_v2Ptr", c_void_p),
            ("processUtilizationSample", c_nvmlProcessUtilizationSample_t),
            ("processUtilizationSamplePtr", c_void_p),
            ("pstates", c_int),
            ("pstatesPtr", c_void_p),
            ("restrictedAPI", c_int),
            ("nvmlReturn", c_int),
            ("nvmlReturnPtr", c_void_p),
            ("rowRemapperHistogramValues", c_nvmlRowRemapperHistogramValues),
            ("rowRemapperHistogramValuesPtr", c_void_p),
            ("sample", c_nvmlSample_t),
            ("samplePtr", c_void_p),
            ("samplingType", c_int),
            ("temperatureSensors", c_int),
            ("temperatureThresholds", c_int),
            ("unitFanSpeeds", c_nvmlUnitFanSpeeds_t),
            ("unitFanSpeedsPtr", c_void_p),
            ("unitInfo", c_nvmlUnitInfo_t),
            ("unitInfoPtr", c_void_p),
            ("unit", c_nvmlUnit_t),
            ("unitPtr", c_void_p),
            ("utilization", c_nvmlUtilization_t),
            ("utilizationPtr", c_void_p),
            ("valueType", c_int),
            ("valueTypePtr", c_void_p),
            ("vgpuCapability", c_int),
            ("vgpuInstanceUtilizationSample", c_nvmlVgpuInstanceUtilizationSample_t),
            ("vgpuInstanceUtilizationSamplePtr", c_void_p),
            ("vgpuLicenseInfo", c_nvmlVgpuLicenseInfo_t),
            ("vgpuLicenseInfoPtr", c_void_p),
            ("vgpuMetadata", c_nvmlVgpuMetadata_t),
            ("vgpuMetadataPtr", c_void_p),
            ("vgpuPgpuCompatibility", c_nvmlVgpuPgpuCompatibility_t),
            ("vgpuPgpuCompatibilityPtr", c_void_p),
            ("vgpuPgpuMetadata", c_nvmlVgpuPgpuMetadata_t),
            ("vgpuPgpuMetadataPtr", c_void_p),
            ("vgpuProcessUtilizationSample", c_nvmlVgpuProcessUtilizationSample_t),
            ("vgpuProcessUtilizationSamplePtr", c_void_p),
            ("vgpuVersion", c_nvmlVgpuVersion_t),
            ("vgpuVersionPtr", c_void_p),
            ("vgpuVmIdType", c_int),
            ("vgpuVmIdTypePtr", c_void_p),
            ("violationTime", c_nvmlViolationTime_t),
            ("violationTimePtr", c_void_p),
            ("ui", c_uint),
            ("uiPtr", c_void_p),
            ("ul", c_ulong),
            ("ulPtr", c_void_p),
            ("ull", c_ulonglong),
            ("ullPtr", c_void_p),
        ]

    class c_injectionArgType_t(c_int):
        INJECTION_CHAR = 0
        INJECTION_CHAR_PTR = 1
        INJECTION_CONST_CHAR_PTR = 2
        INJECTION_CONST_NVMLGPUINSTANCEPLACEMENT_T_PTR = 3
        INJECTION_INT = 4
        INJECTION_INT_PTR = 5
        INJECTION_ACCOUNTINGSTATS = 6
        INJECTION_ACCOUNTINGSTATS_PTR = 7
        INJECTION_BAR1MEMORY = 8
        INJECTION_BAR1MEMORY_PTR = 9
        INJECTION_BRANDTYPE = 10
        INJECTION_BRANDTYPE_PTR = 11
        INJECTION_BRIDGECHIPHIERARCHY = 12
        INJECTION_BRIDGECHIPHIERARCHY_PTR = 13
        INJECTION_CLOCKID = 14
        INJECTION_CLOCKTYPE = 15
        INJECTION_COMPUTEINSTANCEINFO = 16
        INJECTION_COMPUTEINSTANCEINFO_PTR = 17
        INJECTION_COMPUTEINSTANCEPROFILEINFO = 18
        INJECTION_COMPUTEINSTANCEPROFILEINFO_PTR = 19
        INJECTION_COMPUTEINSTANCEPROFILEINFO_V2 = 20
        INJECTION_COMPUTEINSTANCEPROFILEINFO_V2_PTR = 21
        INJECTION_COMPUTEINSTANCE = 22
        INJECTION_COMPUTEINSTANCE_PTR = 23
        INJECTION_COMPUTEMODE = 24
        INJECTION_COMPUTEMODE_PTR = 25
        INJECTION_CONFCOMPUTESYSTEMSTATE = 26
        INJECTION_CONFCOMPUTESYSTEMSTATE_PTR = 27
        INJECTION_DETACHGPUSTATE = 28
        INJECTION_DEVICEATTRIBUTES = 29
        INJECTION_DEVICEATTRIBUTES_PTR = 30
        INJECTION_DEVICE = 31
        INJECTION_DEVICE_PTR = 32
        INJECTION_DRIVERMODEL = 33
        INJECTION_DRIVERMODEL_PTR = 34
        INJECTION_ECCCOUNTERTYPE = 35
        INJECTION_ECCERRORCOUNTS = 36
        INJECTION_ECCERRORCOUNTS_PTR = 37
        INJECTION_ENABLESTATE = 38
        INJECTION_ENABLESTATE_PTR = 39
        INJECTION_ENCODERSESSIONINFO = 40
        INJECTION_ENCODERSESSIONINFO_PTR = 41
        INJECTION_ENCODERTYPE = 42
        INJECTION_EVENTDATA = 43
        INJECTION_EVENTDATA_PTR = 44
        INJECTION_EVENTSET = 45
        INJECTION_EVENTSET_PTR = 46
        INJECTION_EXCLUDEDDEVICEINFO = 47
        INJECTION_EXCLUDEDDEVICEINFO_PTR = 48
        INJECTION_FBCSESSIONINFO = 49
        INJECTION_FBCSESSIONINFO_PTR = 50
        INJECTION_FBCSTATS = 51
        INJECTION_FBCSTATS_PTR = 52
        INJECTION_FIELDVALUE = 53
        INJECTION_FIELDVALUE_PTR = 54
        INJECTION_GPMMETRICSGET = 55
        INJECTION_GPMMETRICSGET_PTR = 56
        INJECTION_GPMSAMPLE = 57
        INJECTION_GPMSAMPLE_PTR = 58
        INJECTION_GPMSUPPORT = 59
        INJECTION_GPMSUPPORT_PTR = 60
        INJECTION_GPUDYNAMICPSTATESINFO = 61
        INJECTION_GPUDYNAMICPSTATESINFO_PTR = 62
        INJECTION_GPUINSTANCEINFO = 63
        INJECTION_GPUINSTANCEINFO_PTR = 64
        INJECTION_GPUINSTANCEPLACEMENT = 65
        INJECTION_GPUINSTANCEPLACEMENT_PTR = 66
        INJECTION_GPUINSTANCEPROFILEINFO = 67
        INJECTION_GPUINSTANCEPROFILEINFO_PTR = 68
        INJECTION_GPUINSTANCEPROFILEINFO_V2 = 69
        INJECTION_GPUINSTANCEPROFILEINFO_V2_PTR = 70
        INJECTION_GPUINSTANCE = 71
        INJECTION_GPUINSTANCE_PTR = 72
        INJECTION_GPUOPERATIONMODE = 73
        INJECTION_GPUOPERATIONMODE_PTR = 74
        INJECTION_GPUP2PCAPSINDEX = 75
        INJECTION_GPUP2PSTATUS = 76
        INJECTION_GPUP2PSTATUS_PTR = 77
        INJECTION_GPUTHERMALSETTINGS = 78
        INJECTION_GPUTHERMALSETTINGS_PTR = 79
        INJECTION_GPUTOPOLOGYLEVEL = 80
        INJECTION_GPUTOPOLOGYLEVEL_PTR = 81
        INJECTION_GPUVIRTUALIZATIONMODE = 82
        INJECTION_GPUVIRTUALIZATIONMODE_PTR = 83
        INJECTION_GRIDLICENSABLEFEATURES = 84
        INJECTION_GRIDLICENSABLEFEATURES_PTR = 85
        INJECTION_HOSTVGPUMODE = 86
        INJECTION_HOSTVGPUMODE_PTR = 87
        INJECTION_HWBCENTRY = 88
        INJECTION_HWBCENTRY_PTR = 89
        INJECTION_INFOROMOBJECT = 90
        INJECTION_INTNVLINKDEVICETYPE = 91
        INJECTION_INTNVLINKDEVICETYPE_PTR = 92
        INJECTION_LEDCOLOR = 93
        INJECTION_LEDSTATE = 94
        INJECTION_LEDSTATE_PTR = 95
        INJECTION_MEMORYERRORTYPE = 96
        INJECTION_MEMORYLOCATION = 97
        INJECTION_MEMORY = 98
        INJECTION_MEMORY_PTR = 99
        INJECTION_MEMORY_V2 = 100
        INJECTION_MEMORY_V2_PTR = 101
        INJECTION_NVLINKCAPABILITY = 102
        INJECTION_NVLINKERRORCOUNTER = 103
        INJECTION_NVLINKUTILIZATIONCONTROL = 104
        INJECTION_NVLINKUTILIZATIONCONTROL_PTR = 105
        INJECTION_PSUINFO = 106
        INJECTION_PSUINFO_PTR = 107
        INJECTION_PAGERETIREMENTCAUSE = 108
        INJECTION_PCIINFO = 109
        INJECTION_PCIINFO_PTR = 110
        INJECTION_PCIELINKSTATE = 111
        INJECTION_PCIEUTILCOUNTER = 112
        INJECTION_PERFPOLICYTYPE = 113
        INJECTION_PROCESSINFO = 114
        INJECTION_PROCESSINFO_PTR = 115
        INJECTION_PROCESSINFO_V1 = 116
        INJECTION_PROCESSINFO_V1_PTR = 117
        INJECTION_PROCESSINFO_V2 = 118
        INJECTION_PROCESSINFO_V2_PTR = 119
        INJECTION_PROCESSUTILIZATIONSAMPLE = 120
        INJECTION_PROCESSUTILIZATIONSAMPLE_PTR = 121
        INJECTION_PSTATES = 122
        INJECTION_PSTATES_PTR = 123
        INJECTION_RESTRICTEDAPI = 124
        INJECTION_RETURN = 125
        INJECTION_RETURN_PTR = 126
        INJECTION_ROWREMAPPERHISTOGRAMVALUES = 127
        INJECTION_ROWREMAPPERHISTOGRAMVALUES_PTR = 128
        INJECTION_SAMPLE = 129
        INJECTION_SAMPLE_PTR = 130
        INJECTION_SAMPLINGTYPE = 131
        INJECTION_TEMPERATURESENSORS = 132
        INJECTION_TEMPERATURETHRESHOLDS = 133
        INJECTION_UNITFANSPEEDS = 134
        INJECTION_UNITFANSPEEDS_PTR = 135
        INJECTION_UNITINFO = 136
        INJECTION_UNITINFO_PTR = 137
        INJECTION_UNIT = 138
        INJECTION_UNIT_PTR = 139
        INJECTION_UTILIZATION = 140
        INJECTION_UTILIZATION_PTR = 141
        INJECTION_VALUETYPE = 142
        INJECTION_VALUETYPE_PTR = 143
        INJECTION_VGPUCAPABILITY = 144
        INJECTION_VGPUINSTANCEUTILIZATIONSAMPLE = 145
        INJECTION_VGPUINSTANCEUTILIZATIONSAMPLE_PTR = 146
        INJECTION_VGPULICENSEINFO = 147
        INJECTION_VGPULICENSEINFO_PTR = 148
        INJECTION_VGPUMETADATA = 149
        INJECTION_VGPUMETADATA_PTR = 150
        INJECTION_VGPUPGPUCOMPATIBILITY = 151
        INJECTION_VGPUPGPUCOMPATIBILITY_PTR = 152
        INJECTION_VGPUPGPUMETADATA = 153
        INJECTION_VGPUPGPUMETADATA_PTR = 154
        INJECTION_VGPUPROCESSUTILIZATIONSAMPLE = 155
        INJECTION_VGPUPROCESSUTILIZATIONSAMPLE_PTR = 156
        INJECTION_VGPUVERSION = 157
        INJECTION_VGPUVERSION_PTR = 158
        INJECTION_VGPUVMIDTYPE = 159
        INJECTION_VGPUVMIDTYPE_PTR = 160
        INJECTION_VIOLATIONTIME = 161
        INJECTION_VIOLATIONTIME_PTR = 162
        INJECTION_UINT = 163
        INJECTION_UINT_PTR = 164
        INJECTION_ULONG = 165
        INJECTION_ULONG_PTR = 166
        INJECTION_ULONG_LONG = 167
        INJECTION_ULONG_LONG_PTR = 168

    class c_injectNvmlVal_t(Structure):
        _fields_ = [
            ("value", c_simpleValue_t),
            ("type", c_injectionArgType_t),
        ]

    nvml_injection_usable = True

except ModuleNotFoundError:
    print ("No dcgm_nvml is currently present.")
    nvml_injection_usable = False
except NameError as e:
    print (f"dcgm_nvml is probably an older version. It is missing a definition for {str(e)}.")
    nvml_injection_usable = False
