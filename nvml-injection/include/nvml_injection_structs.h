/*
 * NOTE: This code is auto-generated by generate_nvml_stubs.py
 * DO NOT EDIT MANUALLY
 */


#pragma once

#include <nvml.h>
typedef union
{
    char *str;
    const char *const_str;
    const nvmlGpuInstancePlacement_t *cnPtr;
    int i;
    int *iPtr;
    nvmlAccountingStats_t *accountingStatsPtr;
    nvmlBAR1Memory_t *bar1MemoryPtr;
    nvmlBrandType_t *brandTypePtr;
    nvmlBridgeChipHierarchy_t *bridgeChipHierarchyPtr;
    nvmlClockId_t clockId;
    nvmlClockType_t clockType;
    nvmlComputeInstanceInfo_t *computeInstanceInfoPtr;
    nvmlComputeInstanceProfileInfo_t *computeInstanceProfileInfoPtr;
    nvmlComputeInstanceProfileInfo_v2_t *computeInstanceProfileInfo_v2Ptr;
    nvmlComputeInstance_t computeInstance;
    nvmlComputeInstance_t *computeInstancePtr;
    nvmlComputeMode_t computeMode;
    nvmlComputeMode_t *computeModePtr;
    nvmlConfComputeSystemState_t *confComputeSystemStatePtr;
    nvmlDetachGpuState_t detachGpuState;
    nvmlDeviceAttributes_t *deviceAttributesPtr;
    nvmlDevice_t device;
    nvmlDevice_t *devicePtr;
    nvmlDriverModel_t driverModel;
    nvmlDriverModel_t *driverModelPtr;
    nvmlEccCounterType_t eccCounterType;
    nvmlEccErrorCounts_t *eccErrorCountsPtr;
    nvmlEnableState_t enableState;
    nvmlEnableState_t *enableStatePtr;
    nvmlEncoderSessionInfo_t *encoderSessionInfoPtr;
    nvmlEncoderType_t encoderType;
    nvmlEventData_t *eventDataPtr;
    nvmlEventSet_t eventSet;
    nvmlEventSet_t *eventSetPtr;
    nvmlExcludedDeviceInfo_t *excludedDeviceInfoPtr;
    nvmlFBCSessionInfo_t *fBCSessionInfoPtr;
    nvmlFBCStats_t *fBCStatsPtr;
    nvmlFieldValue_t *fieldValuePtr;
    nvmlGpmMetricsGet_t *gpmMetricsGetPtr;
    nvmlGpmSample_t gpmSample;
    nvmlGpmSample_t *gpmSamplePtr;
    nvmlGpmSupport_t *gpmSupportPtr;
    nvmlGpuDynamicPstatesInfo_t *gpuDynamicPstatesInfoPtr;
    nvmlGpuInstanceInfo_t *gpuInstanceInfoPtr;
    nvmlGpuInstancePlacement_t *gpuInstancePlacementPtr;
    nvmlGpuInstanceProfileInfo_t *gpuInstanceProfileInfoPtr;
    nvmlGpuInstanceProfileInfo_v2_t *gpuInstanceProfileInfo_v2Ptr;
    nvmlGpuInstance_t gpuInstance;
    nvmlGpuInstance_t *gpuInstancePtr;
    nvmlGpuOperationMode_t gpuOperationMode;
    nvmlGpuOperationMode_t *gpuOperationModePtr;
    nvmlGpuP2PCapsIndex_t gpuP2PCapsIndex;
    nvmlGpuP2PStatus_t *gpuP2PStatusPtr;
    nvmlGpuThermalSettings_t *gpuThermalSettingsPtr;
    nvmlGpuTopologyLevel_t gpuTopologyLevel;
    nvmlGpuTopologyLevel_t *gpuTopologyLevelPtr;
    nvmlGpuVirtualizationMode_t gpuVirtualizationMode;
    nvmlGpuVirtualizationMode_t *gpuVirtualizationModePtr;
    nvmlGridLicensableFeatures_t *gridLicensableFeaturesPtr;
    nvmlHostVgpuMode_t *hostVgpuModePtr;
    nvmlHwbcEntry_t *hwbcEntryPtr;
    nvmlInforomObject_t inforomObject;
    nvmlIntNvLinkDeviceType_t *intNvLinkDeviceTypePtr;
    nvmlLedColor_t ledColor;
    nvmlLedState_t *ledStatePtr;
    nvmlMemoryErrorType_t memoryErrorType;
    nvmlMemoryLocation_t memoryLocation;
    nvmlMemory_t *memoryPtr;
    nvmlMemory_v2_t *memory_v2Ptr;
    nvmlNvLinkCapability_t nvLinkCapability;
    nvmlNvLinkErrorCounter_t nvLinkErrorCounter;
    nvmlNvLinkUtilizationControl_t *nvLinkUtilizationControlPtr;
    nvmlPSUInfo_t *pSUInfoPtr;
    nvmlPageRetirementCause_t pageRetirementCause;
    nvmlPciInfo_t *pciInfoPtr;
    nvmlPcieLinkState_t pcieLinkState;
    nvmlPcieUtilCounter_t pcieUtilCounter;
    nvmlPerfPolicyType_t perfPolicyType;
    nvmlProcessInfo_t *processInfoPtr;
    nvmlProcessInfo_v1_t *processInfo_v1Ptr;
    nvmlProcessInfo_v2_t *processInfo_v2Ptr;
    nvmlProcessUtilizationSample_t *processUtilizationSamplePtr;
    nvmlPstates_t pstates;
    nvmlPstates_t *pstatesPtr;
    nvmlRestrictedAPI_t restrictedAPI;
    nvmlReturn_t *returnPtr;
    nvmlRowRemapperHistogramValues_t *rowRemapperHistogramValuesPtr;
    nvmlSample_t *samplePtr;
    nvmlSamplingType_t samplingType;
    nvmlTemperatureSensors_t temperatureSensors;
    nvmlTemperatureThresholds_t temperatureThresholds;
    nvmlUnitFanSpeeds_t *unitFanSpeedsPtr;
    nvmlUnitInfo_t *unitInfoPtr;
    nvmlUnit_t unit;
    nvmlUnit_t *unitPtr;
    nvmlUtilization_t *utilizationPtr;
    nvmlValueType_t *valueTypePtr;
    nvmlVgpuCapability_t vgpuCapability;
    nvmlVgpuInstanceUtilizationSample_t *vgpuInstanceUtilizationSamplePtr;
    nvmlVgpuLicenseInfo_t *vgpuLicenseInfoPtr;
    nvmlVgpuMetadata_t *vgpuMetadataPtr;
    nvmlVgpuPgpuCompatibility_t *vgpuPgpuCompatibilityPtr;
    nvmlVgpuPgpuMetadata_t *vgpuPgpuMetadataPtr;
    nvmlVgpuProcessUtilizationSample_t *vgpuProcessUtilizationSamplePtr;
    nvmlVgpuVersion_t *vgpuVersionPtr;
    nvmlVgpuVmIdType_t *vgpuVmIdTypePtr;
    nvmlViolationTime_t *violationTimePtr;
    unsigned int ui;
    unsigned int *uiPtr;
    unsigned long *ulPtr;
    unsigned long long ull;
    unsigned long long *ullPtr;
} simpleValue_t;

typedef enum injectionArg_enum
{
    INJECTION_CHAR_PTR                             = 0,
    INJECTION_CONST_CHAR_PTR                       = 1,
    INJECTION_CONST_NVMLGPUINSTANCEPLACEMENT_T_PTR = 2,
    INJECTION_INT                                  = 3,
    INJECTION_INT_PTR                              = 4,
    INJECTION_ACCOUNTINGSTATS_PTR                  = 5,
    INJECTION_BAR1MEMORY_PTR                       = 6,
    INJECTION_BRANDTYPE_PTR                        = 7,
    INJECTION_BRIDGECHIPHIERARCHY_PTR              = 8,
    INJECTION_CLOCKID                              = 9,
    INJECTION_CLOCKTYPE                            = 10,
    INJECTION_COMPUTEINSTANCEINFO_PTR              = 11,
    INJECTION_COMPUTEINSTANCEPROFILEINFO_PTR       = 12,
    INJECTION_COMPUTEINSTANCEPROFILEINFO_V2_PTR    = 13,
    INJECTION_COMPUTEINSTANCE                      = 14,
    INJECTION_COMPUTEINSTANCE_PTR                  = 15,
    INJECTION_COMPUTEMODE                          = 16,
    INJECTION_COMPUTEMODE_PTR                      = 17,
    INJECTION_CONFCOMPUTESYSTEMSTATE_PTR           = 18,
    INJECTION_DETACHGPUSTATE                       = 19,
    INJECTION_DEVICEATTRIBUTES_PTR                 = 20,
    INJECTION_DEVICE                               = 21,
    INJECTION_DEVICE_PTR                           = 22,
    INJECTION_DRIVERMODEL                          = 23,
    INJECTION_DRIVERMODEL_PTR                      = 24,
    INJECTION_ECCCOUNTERTYPE                       = 25,
    INJECTION_ECCERRORCOUNTS_PTR                   = 26,
    INJECTION_ENABLESTATE                          = 27,
    INJECTION_ENABLESTATE_PTR                      = 28,
    INJECTION_ENCODERSESSIONINFO_PTR               = 29,
    INJECTION_ENCODERTYPE                          = 30,
    INJECTION_EVENTDATA_PTR                        = 31,
    INJECTION_EVENTSET                             = 32,
    INJECTION_EVENTSET_PTR                         = 33,
    INJECTION_EXCLUDEDDEVICEINFO_PTR               = 34,
    INJECTION_FBCSESSIONINFO_PTR                   = 35,
    INJECTION_FBCSTATS_PTR                         = 36,
    INJECTION_FIELDVALUE_PTR                       = 37,
    INJECTION_GPMMETRICSGET_PTR                    = 38,
    INJECTION_GPMSAMPLE                            = 39,
    INJECTION_GPMSAMPLE_PTR                        = 40,
    INJECTION_GPMSUPPORT_PTR                       = 41,
    INJECTION_GPUDYNAMICPSTATESINFO_PTR            = 42,
    INJECTION_GPUINSTANCEINFO_PTR                  = 43,
    INJECTION_GPUINSTANCEPLACEMENT_PTR             = 44,
    INJECTION_GPUINSTANCEPROFILEINFO_PTR           = 45,
    INJECTION_GPUINSTANCEPROFILEINFO_V2_PTR        = 46,
    INJECTION_GPUINSTANCE                          = 47,
    INJECTION_GPUINSTANCE_PTR                      = 48,
    INJECTION_GPUOPERATIONMODE                     = 49,
    INJECTION_GPUOPERATIONMODE_PTR                 = 50,
    INJECTION_GPUP2PCAPSINDEX                      = 51,
    INJECTION_GPUP2PSTATUS_PTR                     = 52,
    INJECTION_GPUTHERMALSETTINGS_PTR               = 53,
    INJECTION_GPUTOPOLOGYLEVEL                     = 54,
    INJECTION_GPUTOPOLOGYLEVEL_PTR                 = 55,
    INJECTION_GPUVIRTUALIZATIONMODE                = 56,
    INJECTION_GPUVIRTUALIZATIONMODE_PTR            = 57,
    INJECTION_GRIDLICENSABLEFEATURES_PTR           = 58,
    INJECTION_HOSTVGPUMODE_PTR                     = 59,
    INJECTION_HWBCENTRY_PTR                        = 60,
    INJECTION_INFOROMOBJECT                        = 61,
    INJECTION_INTNVLINKDEVICETYPE_PTR              = 62,
    INJECTION_LEDCOLOR                             = 63,
    INJECTION_LEDSTATE_PTR                         = 64,
    INJECTION_MEMORYERRORTYPE                      = 65,
    INJECTION_MEMORYLOCATION                       = 66,
    INJECTION_MEMORY_PTR                           = 67,
    INJECTION_MEMORY_V2_PTR                        = 68,
    INJECTION_NVLINKCAPABILITY                     = 69,
    INJECTION_NVLINKERRORCOUNTER                   = 70,
    INJECTION_NVLINKUTILIZATIONCONTROL_PTR         = 71,
    INJECTION_PSUINFO_PTR                          = 72,
    INJECTION_PAGERETIREMENTCAUSE                  = 73,
    INJECTION_PCIINFO_PTR                          = 74,
    INJECTION_PCIELINKSTATE                        = 75,
    INJECTION_PCIEUTILCOUNTER                      = 76,
    INJECTION_PERFPOLICYTYPE                       = 77,
    INJECTION_PROCESSINFO_PTR                      = 78,
    INJECTION_PROCESSINFO_V1_PTR                   = 79,
    INJECTION_PROCESSINFO_V2_PTR                   = 80,
    INJECTION_PROCESSUTILIZATIONSAMPLE_PTR         = 81,
    INJECTION_PSTATES                              = 82,
    INJECTION_PSTATES_PTR                          = 83,
    INJECTION_RESTRICTEDAPI                        = 84,
    INJECTION_RETURN_PTR                           = 85,
    INJECTION_ROWREMAPPERHISTOGRAMVALUES_PTR       = 86,
    INJECTION_SAMPLE_PTR                           = 87,
    INJECTION_SAMPLINGTYPE                         = 88,
    INJECTION_TEMPERATURESENSORS                   = 89,
    INJECTION_TEMPERATURETHRESHOLDS                = 90,
    INJECTION_UNITFANSPEEDS_PTR                    = 91,
    INJECTION_UNITINFO_PTR                         = 92,
    INJECTION_UNIT                                 = 93,
    INJECTION_UNIT_PTR                             = 94,
    INJECTION_UTILIZATION_PTR                      = 95,
    INJECTION_VALUETYPE_PTR                        = 96,
    INJECTION_VGPUCAPABILITY                       = 97,
    INJECTION_VGPUINSTANCEUTILIZATIONSAMPLE_PTR    = 98,
    INJECTION_VGPULICENSEINFO_PTR                  = 99,
    INJECTION_VGPUMETADATA_PTR                     = 100,
    INJECTION_VGPUPGPUCOMPATIBILITY_PTR            = 101,
    INJECTION_VGPUPGPUMETADATA_PTR                 = 102,
    INJECTION_VGPUPROCESSUTILIZATIONSAMPLE_PTR     = 103,
    INJECTION_VGPUVERSION_PTR                      = 104,
    INJECTION_VGPUVMIDTYPE_PTR                     = 105,
    INJECTION_VIOLATIONTIME_PTR                    = 106,
    INJECTION_UINT                                 = 107,
    INJECTION_UINT_PTR                             = 108,
    INJECTION_ULONG_PTR                            = 109,
    INJECTION_ULONG_LONG                           = 110,
    INJECTION_ULONG_LONG_PTR                       = 111,
    INJECTION_STRING                               = 112,
    InjectionArgCount
} injectionArgType_t;

typedef struct
{
    simpleValue_t value;
    injectionArgType_t type;
} injectNvmlVal_t;
