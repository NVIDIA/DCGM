//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-32267302
// Cuda compilation tools, release 12.0, V12.0.140
// Based on NVVM 7.0.1
//

.version 8.0
.target sm_70
.address_size 64

	// .globl	waitCycles

.visible .entry waitCycles(
	.param .u64 waitCycles_param_0,
	.param .u32 waitCycles_param_1
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd4, [waitCycles_param_0];
	ld.param.u32 	%rd2, [waitCycles_param_1];
	// begin inline asm
	mov.u64 	%rd5, %clock64;
	// end inline asm
	setp.eq.s64 	%p1, %rd4, 0;
	@%p1 bra 	$L__BB0_3;

	cvta.to.global.u64 	%rd6, %rd4;
	mov.u32 	%r1, %ctaid.x;
	mov.u32 	%r2, %ntid.x;
	mov.u32 	%r3, %tid.x;
	mad.lo.s32 	%r4, %r2, %r1, %r3;
	mul.wide.u32 	%rd7, %r4, 8;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.u64 	[%rd8], %rd2;

$L__BB0_3:
	mov.u32 	%r5, %tid.x;
	setp.ne.s32 	%p2, %r5, 0;
	add.s64 	%rd3, %rd5, %rd2;
	@%p2 bra 	$L__BB0_6;

$L__BB0_5:
	// begin inline asm
	mov.u64 	%rd9, %clock64;
	// end inline asm
	setp.lt.u64 	%p3, %rd9, %rd3;
	@%p3 bra 	$L__BB0_5;

$L__BB0_6:
	bar.sync 	0;
	ret;

}
	// .globl	waitNs
.visible .entry waitNs(
	.param .u64 waitNs_param_0,
	.param .u32 waitNs_param_1
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd4, [waitNs_param_0];
	ld.param.u32 	%rd2, [waitNs_param_1];
	// begin inline asm
	mov.u64 %rd5, %globaltimer;
	// end inline asm
	setp.eq.s64 	%p1, %rd4, 0;
	@%p1 bra 	$L__BB1_3;

	cvta.to.global.u64 	%rd6, %rd4;
	mov.u32 	%r1, %ctaid.x;
	mov.u32 	%r2, %ntid.x;
	mov.u32 	%r3, %tid.x;
	mad.lo.s32 	%r4, %r2, %r1, %r3;
	mul.wide.u32 	%rd7, %r4, 8;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.u64 	[%rd8], %rd2;

$L__BB1_3:
	mov.u32 	%r5, %tid.x;
	setp.ne.s32 	%p2, %r5, 0;
	add.s64 	%rd3, %rd5, %rd2;
	@%p2 bra 	$L__BB1_6;

$L__BB1_5:
	// begin inline asm
	mov.u64 %rd9, %globaltimer;
	// end inline asm
	setp.lt.u64 	%p3, %rd9, %rd3;
	@%p3 bra 	$L__BB1_5;

$L__BB1_6:
	bar.sync 	0;
	ret;

}
	// .globl	doWorkloadFP64
.visible .entry doWorkloadFP64(
	.param .u64 doWorkloadFP64_param_0,
	.param .u64 doWorkloadFP64_param_1
)
{
	.reg .pred 	%p<5>;
	.reg .b32 	%r<9>;
	.reg .f64 	%fd<40>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd2, [doWorkloadFP64_param_0];
	ld.param.u64 	%rd5, [doWorkloadFP64_param_1];
	// begin inline asm
	mov.u64 %rd3, %globaltimer;
	// end inline asm
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r6, %r4, %r3, %r5;
	cvt.rn.f64.u32 	%fd38, %r6;
	add.s64 	%rd1, %rd3, %rd5;
	// begin inline asm
	mov.u64 %rd4, %globaltimer;
	// end inline asm
	setp.le.u64 	%p1, %rd1, %rd4;
	@%p1 bra 	$L__BB2_5;

$L__BB2_2:
	mov.u32 	%r8, 0;

$L__BB2_3:
	add.f64 	%fd6, %fd38, 0d3FF0000000000000;
	add.f64 	%fd7, %fd6, 0d3FF0000000000000;
	add.f64 	%fd8, %fd7, 0d3FF0000000000000;
	add.f64 	%fd9, %fd8, 0d3FF0000000000000;
	add.f64 	%fd10, %fd9, 0d3FF0000000000000;
	add.f64 	%fd11, %fd10, 0d3FF0000000000000;
	add.f64 	%fd12, %fd11, 0d3FF0000000000000;
	add.f64 	%fd13, %fd12, 0d3FF0000000000000;
	add.f64 	%fd14, %fd13, 0d3FF0000000000000;
	add.f64 	%fd15, %fd14, 0d3FF0000000000000;
	add.f64 	%fd16, %fd15, 0d3FF0000000000000;
	add.f64 	%fd17, %fd16, 0d3FF0000000000000;
	add.f64 	%fd18, %fd17, 0d3FF0000000000000;
	add.f64 	%fd19, %fd18, 0d3FF0000000000000;
	add.f64 	%fd20, %fd19, 0d3FF0000000000000;
	add.f64 	%fd21, %fd20, 0d3FF0000000000000;
	add.f64 	%fd22, %fd21, 0d3FF0000000000000;
	add.f64 	%fd23, %fd22, 0d3FF0000000000000;
	add.f64 	%fd24, %fd23, 0d3FF0000000000000;
	add.f64 	%fd25, %fd24, 0d3FF0000000000000;
	add.f64 	%fd26, %fd25, 0d3FF0000000000000;
	add.f64 	%fd27, %fd26, 0d3FF0000000000000;
	add.f64 	%fd28, %fd27, 0d3FF0000000000000;
	add.f64 	%fd29, %fd28, 0d3FF0000000000000;
	add.f64 	%fd30, %fd29, 0d3FF0000000000000;
	add.f64 	%fd31, %fd30, 0d3FF0000000000000;
	add.f64 	%fd32, %fd31, 0d3FF0000000000000;
	add.f64 	%fd33, %fd32, 0d3FF0000000000000;
	add.f64 	%fd34, %fd33, 0d3FF0000000000000;
	add.f64 	%fd35, %fd34, 0d3FF0000000000000;
	add.f64 	%fd36, %fd35, 0d3FF0000000000000;
	add.f64 	%fd38, %fd36, 0d3FF0000000000000;
	add.s32 	%r8, %r8, 8;
	setp.ne.s32 	%p2, %r8, 1000;
	@%p2 bra 	$L__BB2_3;

	// begin inline asm
	mov.u64 %rd6, %globaltimer;
	// end inline asm
	setp.gt.u64 	%p3, %rd1, %rd6;
	@%p3 bra 	$L__BB2_2;

$L__BB2_5:
	setp.eq.s64 	%p4, %rd2, 0;
	@%p4 bra 	$L__BB2_7;

	cvta.to.global.u64 	%rd7, %rd2;
	st.global.f64 	[%rd7], %fd38;

$L__BB2_7:
	ret;

}
	// .globl	doWorkloadFP32
.visible .entry doWorkloadFP32(
	.param .u64 doWorkloadFP32_param_0,
	.param .u64 doWorkloadFP32_param_1
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<40>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd2, [doWorkloadFP32_param_0];
	ld.param.u64 	%rd5, [doWorkloadFP32_param_1];
	// begin inline asm
	mov.u64 %rd3, %globaltimer;
	// end inline asm
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r6, %r4, %r3, %r5;
	cvt.rn.f32.u32 	%f38, %r6;
	add.s64 	%rd1, %rd3, %rd5;
	// begin inline asm
	mov.u64 %rd4, %globaltimer;
	// end inline asm
	setp.le.u64 	%p1, %rd1, %rd4;
	@%p1 bra 	$L__BB3_5;

$L__BB3_2:
	mov.u32 	%r8, 0;

$L__BB3_3:
	add.f32 	%f6, %f38, 0f3F800000;
	add.f32 	%f7, %f6, 0f3F800000;
	add.f32 	%f8, %f7, 0f3F800000;
	add.f32 	%f9, %f8, 0f3F800000;
	add.f32 	%f10, %f9, 0f3F800000;
	add.f32 	%f11, %f10, 0f3F800000;
	add.f32 	%f12, %f11, 0f3F800000;
	add.f32 	%f13, %f12, 0f3F800000;
	add.f32 	%f14, %f13, 0f3F800000;
	add.f32 	%f15, %f14, 0f3F800000;
	add.f32 	%f16, %f15, 0f3F800000;
	add.f32 	%f17, %f16, 0f3F800000;
	add.f32 	%f18, %f17, 0f3F800000;
	add.f32 	%f19, %f18, 0f3F800000;
	add.f32 	%f20, %f19, 0f3F800000;
	add.f32 	%f21, %f20, 0f3F800000;
	add.f32 	%f22, %f21, 0f3F800000;
	add.f32 	%f23, %f22, 0f3F800000;
	add.f32 	%f24, %f23, 0f3F800000;
	add.f32 	%f25, %f24, 0f3F800000;
	add.f32 	%f26, %f25, 0f3F800000;
	add.f32 	%f27, %f26, 0f3F800000;
	add.f32 	%f28, %f27, 0f3F800000;
	add.f32 	%f29, %f28, 0f3F800000;
	add.f32 	%f30, %f29, 0f3F800000;
	add.f32 	%f31, %f30, 0f3F800000;
	add.f32 	%f32, %f31, 0f3F800000;
	add.f32 	%f33, %f32, 0f3F800000;
	add.f32 	%f34, %f33, 0f3F800000;
	add.f32 	%f35, %f34, 0f3F800000;
	add.f32 	%f36, %f35, 0f3F800000;
	add.f32 	%f38, %f36, 0f3F800000;
	add.s32 	%r8, %r8, 8;
	setp.ne.s32 	%p2, %r8, 1000;
	@%p2 bra 	$L__BB3_3;

	// begin inline asm
	mov.u64 %rd6, %globaltimer;
	// end inline asm
	setp.gt.u64 	%p3, %rd1, %rd6;
	@%p3 bra 	$L__BB3_2;

$L__BB3_5:
	setp.eq.s64 	%p4, %rd2, 0;
	@%p4 bra 	$L__BB3_7;

	cvta.to.global.u64 	%rd7, %rd2;
	st.global.f32 	[%rd7], %f38;

$L__BB3_7:
	ret;

}
	// .globl	doWorkloadFP16
.visible .entry doWorkloadFP16(
	.param .u64 doWorkloadFP16_param_0,
	.param .u64 doWorkloadFP16_param_1
)
{
	.reg .pred 	%p<4>;
	.reg .b16 	%rs<12010>;
	.reg .b32 	%r<5>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd5, [doWorkloadFP16_param_1];
	// begin inline asm
	mov.u64 %rd3, %globaltimer;
	// end inline asm
	mov.u32 	%r1, %ctaid.x;
	mov.u32 	%r2, %ntid.x;
	mov.u32 	%r3, %tid.x;
	mad.lo.s32 	%r4, %r2, %r1, %r3;
	cvt.rn.f64.u32 	%fd1, %r4;
	// begin inline asm
	{  cvt.rn.f16.f64 %rs12009, %fd1;}

	// end inline asm
	mov.f64 	%fd2, 0d3FF0000000000000;
	// begin inline asm
	{  cvt.rn.f16.f64 %rs7, %fd2;}

	// end inline asm
	add.s64 	%rd1, %rd3, %rd5;
	// begin inline asm
	mov.u64 %rd4, %globaltimer;
	// end inline asm
	setp.le.u64 	%p1, %rd1, %rd4;
	@%p1 bra 	$L__BB4_3;

$L__BB4_2:
	// begin inline asm
	{add.f16 %rs8,%rs12009,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11,%rs8,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs14,%rs11,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs17,%rs14,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs20,%rs17,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs23,%rs20,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs26,%rs23,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs29,%rs26,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs32,%rs29,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs35,%rs32,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs38,%rs35,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs41,%rs38,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs44,%rs41,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs47,%rs44,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs50,%rs47,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs53,%rs50,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs56,%rs53,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs59,%rs56,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs62,%rs59,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs65,%rs62,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs68,%rs65,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs71,%rs68,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs74,%rs71,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs77,%rs74,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs80,%rs77,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs83,%rs80,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs86,%rs83,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs89,%rs86,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs92,%rs89,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs95,%rs92,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs98,%rs95,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs101,%rs98,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs104,%rs101,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs107,%rs104,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs110,%rs107,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs113,%rs110,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs116,%rs113,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs119,%rs116,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs122,%rs119,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs125,%rs122,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs128,%rs125,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs131,%rs128,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs134,%rs131,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs137,%rs134,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs140,%rs137,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs143,%rs140,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs146,%rs143,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs149,%rs146,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs152,%rs149,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs155,%rs152,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs158,%rs155,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs161,%rs158,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs164,%rs161,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs167,%rs164,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs170,%rs167,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs173,%rs170,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs176,%rs173,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs179,%rs176,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs182,%rs179,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs185,%rs182,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs188,%rs185,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs191,%rs188,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs194,%rs191,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs197,%rs194,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs200,%rs197,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs203,%rs200,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs206,%rs203,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs209,%rs206,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs212,%rs209,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs215,%rs212,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs218,%rs215,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs221,%rs218,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs224,%rs221,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs227,%rs224,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs230,%rs227,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs233,%rs230,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs236,%rs233,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs239,%rs236,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs242,%rs239,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs245,%rs242,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs248,%rs245,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs251,%rs248,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs254,%rs251,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs257,%rs254,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs260,%rs257,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs263,%rs260,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs266,%rs263,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs269,%rs266,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs272,%rs269,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs275,%rs272,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs278,%rs275,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs281,%rs278,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs284,%rs281,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs287,%rs284,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs290,%rs287,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs293,%rs290,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs296,%rs293,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs299,%rs296,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs302,%rs299,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs305,%rs302,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs308,%rs305,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs311,%rs308,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs314,%rs311,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs317,%rs314,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs320,%rs317,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs323,%rs320,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs326,%rs323,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs329,%rs326,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs332,%rs329,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs335,%rs332,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs338,%rs335,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs341,%rs338,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs344,%rs341,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs347,%rs344,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs350,%rs347,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs353,%rs350,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs356,%rs353,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs359,%rs356,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs362,%rs359,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs365,%rs362,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs368,%rs365,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs371,%rs368,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs374,%rs371,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs377,%rs374,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs380,%rs377,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs383,%rs380,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs386,%rs383,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs389,%rs386,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs392,%rs389,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs395,%rs392,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs398,%rs395,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs401,%rs398,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs404,%rs401,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs407,%rs404,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs410,%rs407,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs413,%rs410,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs416,%rs413,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs419,%rs416,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs422,%rs419,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs425,%rs422,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs428,%rs425,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs431,%rs428,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs434,%rs431,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs437,%rs434,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs440,%rs437,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs443,%rs440,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs446,%rs443,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs449,%rs446,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs452,%rs449,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs455,%rs452,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs458,%rs455,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs461,%rs458,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs464,%rs461,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs467,%rs464,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs470,%rs467,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs473,%rs470,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs476,%rs473,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs479,%rs476,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs482,%rs479,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs485,%rs482,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs488,%rs485,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs491,%rs488,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs494,%rs491,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs497,%rs494,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs500,%rs497,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs503,%rs500,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs506,%rs503,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs509,%rs506,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs512,%rs509,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs515,%rs512,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs518,%rs515,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs521,%rs518,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs524,%rs521,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs527,%rs524,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs530,%rs527,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs533,%rs530,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs536,%rs533,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs539,%rs536,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs542,%rs539,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs545,%rs542,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs548,%rs545,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs551,%rs548,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs554,%rs551,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs557,%rs554,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs560,%rs557,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs563,%rs560,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs566,%rs563,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs569,%rs566,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs572,%rs569,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs575,%rs572,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs578,%rs575,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs581,%rs578,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs584,%rs581,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs587,%rs584,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs590,%rs587,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs593,%rs590,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs596,%rs593,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs599,%rs596,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs602,%rs599,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs605,%rs602,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs608,%rs605,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs611,%rs608,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs614,%rs611,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs617,%rs614,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs620,%rs617,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs623,%rs620,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs626,%rs623,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs629,%rs626,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs632,%rs629,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs635,%rs632,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs638,%rs635,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs641,%rs638,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs644,%rs641,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs647,%rs644,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs650,%rs647,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs653,%rs650,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs656,%rs653,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs659,%rs656,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs662,%rs659,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs665,%rs662,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs668,%rs665,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs671,%rs668,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs674,%rs671,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs677,%rs674,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs680,%rs677,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs683,%rs680,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs686,%rs683,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs689,%rs686,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs692,%rs689,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs695,%rs692,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs698,%rs695,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs701,%rs698,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs704,%rs701,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs707,%rs704,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs710,%rs707,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs713,%rs710,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs716,%rs713,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs719,%rs716,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs722,%rs719,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs725,%rs722,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs728,%rs725,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs731,%rs728,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs734,%rs731,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs737,%rs734,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs740,%rs737,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs743,%rs740,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs746,%rs743,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs749,%rs746,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs752,%rs749,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs755,%rs752,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs758,%rs755,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs761,%rs758,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs764,%rs761,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs767,%rs764,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs770,%rs767,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs773,%rs770,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs776,%rs773,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs779,%rs776,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs782,%rs779,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs785,%rs782,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs788,%rs785,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs791,%rs788,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs794,%rs791,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs797,%rs794,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs800,%rs797,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs803,%rs800,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs806,%rs803,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs809,%rs806,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs812,%rs809,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs815,%rs812,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs818,%rs815,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs821,%rs818,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs824,%rs821,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs827,%rs824,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs830,%rs827,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs833,%rs830,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs836,%rs833,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs839,%rs836,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs842,%rs839,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs845,%rs842,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs848,%rs845,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs851,%rs848,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs854,%rs851,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs857,%rs854,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs860,%rs857,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs863,%rs860,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs866,%rs863,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs869,%rs866,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs872,%rs869,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs875,%rs872,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs878,%rs875,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs881,%rs878,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs884,%rs881,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs887,%rs884,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs890,%rs887,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs893,%rs890,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs896,%rs893,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs899,%rs896,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs902,%rs899,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs905,%rs902,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs908,%rs905,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs911,%rs908,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs914,%rs911,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs917,%rs914,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs920,%rs917,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs923,%rs920,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs926,%rs923,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs929,%rs926,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs932,%rs929,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs935,%rs932,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs938,%rs935,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs941,%rs938,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs944,%rs941,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs947,%rs944,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs950,%rs947,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs953,%rs950,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs956,%rs953,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs959,%rs956,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs962,%rs959,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs965,%rs962,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs968,%rs965,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs971,%rs968,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs974,%rs971,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs977,%rs974,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs980,%rs977,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs983,%rs980,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs986,%rs983,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs989,%rs986,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs992,%rs989,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs995,%rs992,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs998,%rs995,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1001,%rs998,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1004,%rs1001,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1007,%rs1004,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1010,%rs1007,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1013,%rs1010,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1016,%rs1013,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1019,%rs1016,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1022,%rs1019,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1025,%rs1022,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1028,%rs1025,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1031,%rs1028,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1034,%rs1031,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1037,%rs1034,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1040,%rs1037,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1043,%rs1040,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1046,%rs1043,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1049,%rs1046,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1052,%rs1049,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1055,%rs1052,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1058,%rs1055,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1061,%rs1058,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1064,%rs1061,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1067,%rs1064,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1070,%rs1067,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1073,%rs1070,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1076,%rs1073,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1079,%rs1076,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1082,%rs1079,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1085,%rs1082,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1088,%rs1085,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1091,%rs1088,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1094,%rs1091,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1097,%rs1094,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1100,%rs1097,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1103,%rs1100,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1106,%rs1103,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1109,%rs1106,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1112,%rs1109,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1115,%rs1112,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1118,%rs1115,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1121,%rs1118,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1124,%rs1121,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1127,%rs1124,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1130,%rs1127,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1133,%rs1130,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1136,%rs1133,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1139,%rs1136,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1142,%rs1139,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1145,%rs1142,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1148,%rs1145,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1151,%rs1148,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1154,%rs1151,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1157,%rs1154,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1160,%rs1157,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1163,%rs1160,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1166,%rs1163,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1169,%rs1166,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1172,%rs1169,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1175,%rs1172,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1178,%rs1175,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1181,%rs1178,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1184,%rs1181,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1187,%rs1184,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1190,%rs1187,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1193,%rs1190,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1196,%rs1193,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1199,%rs1196,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1202,%rs1199,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1205,%rs1202,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1208,%rs1205,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1211,%rs1208,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1214,%rs1211,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1217,%rs1214,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1220,%rs1217,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1223,%rs1220,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1226,%rs1223,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1229,%rs1226,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1232,%rs1229,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1235,%rs1232,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1238,%rs1235,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1241,%rs1238,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1244,%rs1241,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1247,%rs1244,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1250,%rs1247,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1253,%rs1250,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1256,%rs1253,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1259,%rs1256,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1262,%rs1259,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1265,%rs1262,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1268,%rs1265,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1271,%rs1268,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1274,%rs1271,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1277,%rs1274,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1280,%rs1277,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1283,%rs1280,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1286,%rs1283,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1289,%rs1286,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1292,%rs1289,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1295,%rs1292,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1298,%rs1295,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1301,%rs1298,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1304,%rs1301,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1307,%rs1304,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1310,%rs1307,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1313,%rs1310,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1316,%rs1313,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1319,%rs1316,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1322,%rs1319,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1325,%rs1322,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1328,%rs1325,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1331,%rs1328,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1334,%rs1331,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1337,%rs1334,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1340,%rs1337,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1343,%rs1340,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1346,%rs1343,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1349,%rs1346,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1352,%rs1349,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1355,%rs1352,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1358,%rs1355,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1361,%rs1358,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1364,%rs1361,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1367,%rs1364,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1370,%rs1367,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1373,%rs1370,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1376,%rs1373,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1379,%rs1376,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1382,%rs1379,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1385,%rs1382,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1388,%rs1385,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1391,%rs1388,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1394,%rs1391,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1397,%rs1394,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1400,%rs1397,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1403,%rs1400,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1406,%rs1403,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1409,%rs1406,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1412,%rs1409,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1415,%rs1412,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1418,%rs1415,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1421,%rs1418,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1424,%rs1421,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1427,%rs1424,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1430,%rs1427,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1433,%rs1430,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1436,%rs1433,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1439,%rs1436,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1442,%rs1439,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1445,%rs1442,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1448,%rs1445,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1451,%rs1448,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1454,%rs1451,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1457,%rs1454,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1460,%rs1457,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1463,%rs1460,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1466,%rs1463,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1469,%rs1466,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1472,%rs1469,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1475,%rs1472,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1478,%rs1475,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1481,%rs1478,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1484,%rs1481,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1487,%rs1484,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1490,%rs1487,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1493,%rs1490,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1496,%rs1493,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1499,%rs1496,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1502,%rs1499,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1505,%rs1502,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1508,%rs1505,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1511,%rs1508,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1514,%rs1511,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1517,%rs1514,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1520,%rs1517,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1523,%rs1520,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1526,%rs1523,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1529,%rs1526,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1532,%rs1529,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1535,%rs1532,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1538,%rs1535,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1541,%rs1538,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1544,%rs1541,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1547,%rs1544,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1550,%rs1547,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1553,%rs1550,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1556,%rs1553,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1559,%rs1556,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1562,%rs1559,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1565,%rs1562,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1568,%rs1565,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1571,%rs1568,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1574,%rs1571,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1577,%rs1574,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1580,%rs1577,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1583,%rs1580,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1586,%rs1583,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1589,%rs1586,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1592,%rs1589,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1595,%rs1592,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1598,%rs1595,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1601,%rs1598,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1604,%rs1601,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1607,%rs1604,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1610,%rs1607,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1613,%rs1610,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1616,%rs1613,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1619,%rs1616,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1622,%rs1619,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1625,%rs1622,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1628,%rs1625,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1631,%rs1628,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1634,%rs1631,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1637,%rs1634,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1640,%rs1637,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1643,%rs1640,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1646,%rs1643,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1649,%rs1646,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1652,%rs1649,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1655,%rs1652,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1658,%rs1655,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1661,%rs1658,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1664,%rs1661,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1667,%rs1664,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1670,%rs1667,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1673,%rs1670,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1676,%rs1673,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1679,%rs1676,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1682,%rs1679,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1685,%rs1682,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1688,%rs1685,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1691,%rs1688,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1694,%rs1691,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1697,%rs1694,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1700,%rs1697,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1703,%rs1700,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1706,%rs1703,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1709,%rs1706,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1712,%rs1709,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1715,%rs1712,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1718,%rs1715,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1721,%rs1718,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1724,%rs1721,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1727,%rs1724,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1730,%rs1727,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1733,%rs1730,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1736,%rs1733,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1739,%rs1736,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1742,%rs1739,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1745,%rs1742,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1748,%rs1745,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1751,%rs1748,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1754,%rs1751,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1757,%rs1754,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1760,%rs1757,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1763,%rs1760,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1766,%rs1763,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1769,%rs1766,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1772,%rs1769,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1775,%rs1772,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1778,%rs1775,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1781,%rs1778,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1784,%rs1781,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1787,%rs1784,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1790,%rs1787,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1793,%rs1790,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1796,%rs1793,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1799,%rs1796,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1802,%rs1799,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1805,%rs1802,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1808,%rs1805,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1811,%rs1808,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1814,%rs1811,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1817,%rs1814,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1820,%rs1817,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1823,%rs1820,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1826,%rs1823,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1829,%rs1826,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1832,%rs1829,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1835,%rs1832,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1838,%rs1835,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1841,%rs1838,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1844,%rs1841,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1847,%rs1844,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1850,%rs1847,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1853,%rs1850,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1856,%rs1853,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1859,%rs1856,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1862,%rs1859,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1865,%rs1862,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1868,%rs1865,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1871,%rs1868,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1874,%rs1871,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1877,%rs1874,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1880,%rs1877,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1883,%rs1880,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1886,%rs1883,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1889,%rs1886,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1892,%rs1889,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1895,%rs1892,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1898,%rs1895,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1901,%rs1898,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1904,%rs1901,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1907,%rs1904,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1910,%rs1907,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1913,%rs1910,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1916,%rs1913,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1919,%rs1916,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1922,%rs1919,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1925,%rs1922,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1928,%rs1925,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1931,%rs1928,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1934,%rs1931,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1937,%rs1934,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1940,%rs1937,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1943,%rs1940,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1946,%rs1943,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1949,%rs1946,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1952,%rs1949,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1955,%rs1952,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1958,%rs1955,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1961,%rs1958,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1964,%rs1961,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1967,%rs1964,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1970,%rs1967,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1973,%rs1970,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1976,%rs1973,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1979,%rs1976,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1982,%rs1979,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1985,%rs1982,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1988,%rs1985,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1991,%rs1988,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1994,%rs1991,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs1997,%rs1994,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2000,%rs1997,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2003,%rs2000,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2006,%rs2003,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2009,%rs2006,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2012,%rs2009,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2015,%rs2012,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2018,%rs2015,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2021,%rs2018,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2024,%rs2021,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2027,%rs2024,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2030,%rs2027,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2033,%rs2030,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2036,%rs2033,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2039,%rs2036,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2042,%rs2039,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2045,%rs2042,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2048,%rs2045,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2051,%rs2048,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2054,%rs2051,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2057,%rs2054,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2060,%rs2057,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2063,%rs2060,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2066,%rs2063,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2069,%rs2066,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2072,%rs2069,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2075,%rs2072,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2078,%rs2075,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2081,%rs2078,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2084,%rs2081,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2087,%rs2084,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2090,%rs2087,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2093,%rs2090,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2096,%rs2093,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2099,%rs2096,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2102,%rs2099,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2105,%rs2102,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2108,%rs2105,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2111,%rs2108,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2114,%rs2111,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2117,%rs2114,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2120,%rs2117,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2123,%rs2120,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2126,%rs2123,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2129,%rs2126,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2132,%rs2129,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2135,%rs2132,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2138,%rs2135,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2141,%rs2138,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2144,%rs2141,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2147,%rs2144,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2150,%rs2147,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2153,%rs2150,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2156,%rs2153,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2159,%rs2156,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2162,%rs2159,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2165,%rs2162,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2168,%rs2165,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2171,%rs2168,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2174,%rs2171,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2177,%rs2174,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2180,%rs2177,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2183,%rs2180,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2186,%rs2183,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2189,%rs2186,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2192,%rs2189,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2195,%rs2192,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2198,%rs2195,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2201,%rs2198,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2204,%rs2201,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2207,%rs2204,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2210,%rs2207,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2213,%rs2210,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2216,%rs2213,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2219,%rs2216,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2222,%rs2219,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2225,%rs2222,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2228,%rs2225,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2231,%rs2228,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2234,%rs2231,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2237,%rs2234,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2240,%rs2237,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2243,%rs2240,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2246,%rs2243,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2249,%rs2246,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2252,%rs2249,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2255,%rs2252,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2258,%rs2255,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2261,%rs2258,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2264,%rs2261,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2267,%rs2264,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2270,%rs2267,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2273,%rs2270,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2276,%rs2273,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2279,%rs2276,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2282,%rs2279,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2285,%rs2282,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2288,%rs2285,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2291,%rs2288,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2294,%rs2291,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2297,%rs2294,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2300,%rs2297,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2303,%rs2300,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2306,%rs2303,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2309,%rs2306,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2312,%rs2309,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2315,%rs2312,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2318,%rs2315,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2321,%rs2318,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2324,%rs2321,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2327,%rs2324,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2330,%rs2327,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2333,%rs2330,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2336,%rs2333,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2339,%rs2336,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2342,%rs2339,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2345,%rs2342,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2348,%rs2345,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2351,%rs2348,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2354,%rs2351,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2357,%rs2354,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2360,%rs2357,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2363,%rs2360,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2366,%rs2363,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2369,%rs2366,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2372,%rs2369,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2375,%rs2372,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2378,%rs2375,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2381,%rs2378,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2384,%rs2381,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2387,%rs2384,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2390,%rs2387,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2393,%rs2390,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2396,%rs2393,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2399,%rs2396,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2402,%rs2399,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2405,%rs2402,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2408,%rs2405,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2411,%rs2408,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2414,%rs2411,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2417,%rs2414,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2420,%rs2417,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2423,%rs2420,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2426,%rs2423,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2429,%rs2426,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2432,%rs2429,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2435,%rs2432,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2438,%rs2435,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2441,%rs2438,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2444,%rs2441,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2447,%rs2444,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2450,%rs2447,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2453,%rs2450,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2456,%rs2453,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2459,%rs2456,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2462,%rs2459,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2465,%rs2462,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2468,%rs2465,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2471,%rs2468,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2474,%rs2471,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2477,%rs2474,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2480,%rs2477,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2483,%rs2480,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2486,%rs2483,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2489,%rs2486,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2492,%rs2489,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2495,%rs2492,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2498,%rs2495,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2501,%rs2498,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2504,%rs2501,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2507,%rs2504,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2510,%rs2507,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2513,%rs2510,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2516,%rs2513,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2519,%rs2516,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2522,%rs2519,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2525,%rs2522,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2528,%rs2525,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2531,%rs2528,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2534,%rs2531,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2537,%rs2534,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2540,%rs2537,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2543,%rs2540,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2546,%rs2543,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2549,%rs2546,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2552,%rs2549,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2555,%rs2552,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2558,%rs2555,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2561,%rs2558,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2564,%rs2561,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2567,%rs2564,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2570,%rs2567,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2573,%rs2570,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2576,%rs2573,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2579,%rs2576,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2582,%rs2579,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2585,%rs2582,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2588,%rs2585,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2591,%rs2588,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2594,%rs2591,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2597,%rs2594,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2600,%rs2597,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2603,%rs2600,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2606,%rs2603,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2609,%rs2606,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2612,%rs2609,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2615,%rs2612,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2618,%rs2615,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2621,%rs2618,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2624,%rs2621,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2627,%rs2624,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2630,%rs2627,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2633,%rs2630,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2636,%rs2633,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2639,%rs2636,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2642,%rs2639,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2645,%rs2642,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2648,%rs2645,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2651,%rs2648,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2654,%rs2651,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2657,%rs2654,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2660,%rs2657,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2663,%rs2660,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2666,%rs2663,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2669,%rs2666,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2672,%rs2669,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2675,%rs2672,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2678,%rs2675,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2681,%rs2678,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2684,%rs2681,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2687,%rs2684,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2690,%rs2687,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2693,%rs2690,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2696,%rs2693,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2699,%rs2696,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2702,%rs2699,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2705,%rs2702,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2708,%rs2705,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2711,%rs2708,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2714,%rs2711,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2717,%rs2714,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2720,%rs2717,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2723,%rs2720,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2726,%rs2723,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2729,%rs2726,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2732,%rs2729,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2735,%rs2732,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2738,%rs2735,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2741,%rs2738,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2744,%rs2741,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2747,%rs2744,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2750,%rs2747,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2753,%rs2750,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2756,%rs2753,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2759,%rs2756,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2762,%rs2759,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2765,%rs2762,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2768,%rs2765,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2771,%rs2768,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2774,%rs2771,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2777,%rs2774,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2780,%rs2777,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2783,%rs2780,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2786,%rs2783,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2789,%rs2786,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2792,%rs2789,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2795,%rs2792,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2798,%rs2795,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2801,%rs2798,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2804,%rs2801,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2807,%rs2804,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2810,%rs2807,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2813,%rs2810,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2816,%rs2813,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2819,%rs2816,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2822,%rs2819,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2825,%rs2822,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2828,%rs2825,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2831,%rs2828,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2834,%rs2831,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2837,%rs2834,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2840,%rs2837,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2843,%rs2840,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2846,%rs2843,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2849,%rs2846,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2852,%rs2849,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2855,%rs2852,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2858,%rs2855,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2861,%rs2858,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2864,%rs2861,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2867,%rs2864,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2870,%rs2867,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2873,%rs2870,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2876,%rs2873,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2879,%rs2876,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2882,%rs2879,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2885,%rs2882,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2888,%rs2885,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2891,%rs2888,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2894,%rs2891,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2897,%rs2894,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2900,%rs2897,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2903,%rs2900,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2906,%rs2903,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2909,%rs2906,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2912,%rs2909,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2915,%rs2912,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2918,%rs2915,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2921,%rs2918,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2924,%rs2921,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2927,%rs2924,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2930,%rs2927,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2933,%rs2930,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2936,%rs2933,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2939,%rs2936,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2942,%rs2939,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2945,%rs2942,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2948,%rs2945,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2951,%rs2948,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2954,%rs2951,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2957,%rs2954,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2960,%rs2957,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2963,%rs2960,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2966,%rs2963,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2969,%rs2966,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2972,%rs2969,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2975,%rs2972,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2978,%rs2975,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2981,%rs2978,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2984,%rs2981,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2987,%rs2984,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2990,%rs2987,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2993,%rs2990,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2996,%rs2993,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs2999,%rs2996,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3002,%rs2999,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3005,%rs3002,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3008,%rs3005,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3011,%rs3008,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3014,%rs3011,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3017,%rs3014,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3020,%rs3017,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3023,%rs3020,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3026,%rs3023,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3029,%rs3026,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3032,%rs3029,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3035,%rs3032,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3038,%rs3035,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3041,%rs3038,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3044,%rs3041,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3047,%rs3044,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3050,%rs3047,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3053,%rs3050,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3056,%rs3053,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3059,%rs3056,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3062,%rs3059,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3065,%rs3062,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3068,%rs3065,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3071,%rs3068,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3074,%rs3071,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3077,%rs3074,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3080,%rs3077,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3083,%rs3080,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3086,%rs3083,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3089,%rs3086,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3092,%rs3089,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3095,%rs3092,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3098,%rs3095,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3101,%rs3098,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3104,%rs3101,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3107,%rs3104,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3110,%rs3107,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3113,%rs3110,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3116,%rs3113,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3119,%rs3116,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3122,%rs3119,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3125,%rs3122,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3128,%rs3125,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3131,%rs3128,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3134,%rs3131,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3137,%rs3134,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3140,%rs3137,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3143,%rs3140,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3146,%rs3143,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3149,%rs3146,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3152,%rs3149,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3155,%rs3152,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3158,%rs3155,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3161,%rs3158,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3164,%rs3161,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3167,%rs3164,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3170,%rs3167,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3173,%rs3170,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3176,%rs3173,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3179,%rs3176,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3182,%rs3179,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3185,%rs3182,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3188,%rs3185,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3191,%rs3188,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3194,%rs3191,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3197,%rs3194,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3200,%rs3197,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3203,%rs3200,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3206,%rs3203,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3209,%rs3206,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3212,%rs3209,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3215,%rs3212,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3218,%rs3215,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3221,%rs3218,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3224,%rs3221,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3227,%rs3224,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3230,%rs3227,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3233,%rs3230,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3236,%rs3233,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3239,%rs3236,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3242,%rs3239,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3245,%rs3242,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3248,%rs3245,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3251,%rs3248,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3254,%rs3251,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3257,%rs3254,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3260,%rs3257,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3263,%rs3260,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3266,%rs3263,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3269,%rs3266,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3272,%rs3269,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3275,%rs3272,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3278,%rs3275,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3281,%rs3278,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3284,%rs3281,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3287,%rs3284,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3290,%rs3287,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3293,%rs3290,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3296,%rs3293,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3299,%rs3296,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3302,%rs3299,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3305,%rs3302,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3308,%rs3305,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3311,%rs3308,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3314,%rs3311,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3317,%rs3314,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3320,%rs3317,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3323,%rs3320,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3326,%rs3323,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3329,%rs3326,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3332,%rs3329,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3335,%rs3332,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3338,%rs3335,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3341,%rs3338,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3344,%rs3341,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3347,%rs3344,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3350,%rs3347,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3353,%rs3350,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3356,%rs3353,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3359,%rs3356,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3362,%rs3359,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3365,%rs3362,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3368,%rs3365,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3371,%rs3368,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3374,%rs3371,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3377,%rs3374,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3380,%rs3377,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3383,%rs3380,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3386,%rs3383,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3389,%rs3386,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3392,%rs3389,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3395,%rs3392,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3398,%rs3395,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3401,%rs3398,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3404,%rs3401,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3407,%rs3404,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3410,%rs3407,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3413,%rs3410,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3416,%rs3413,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3419,%rs3416,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3422,%rs3419,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3425,%rs3422,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3428,%rs3425,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3431,%rs3428,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3434,%rs3431,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3437,%rs3434,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3440,%rs3437,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3443,%rs3440,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3446,%rs3443,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3449,%rs3446,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3452,%rs3449,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3455,%rs3452,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3458,%rs3455,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3461,%rs3458,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3464,%rs3461,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3467,%rs3464,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3470,%rs3467,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3473,%rs3470,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3476,%rs3473,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3479,%rs3476,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3482,%rs3479,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3485,%rs3482,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3488,%rs3485,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3491,%rs3488,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3494,%rs3491,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3497,%rs3494,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3500,%rs3497,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3503,%rs3500,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3506,%rs3503,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3509,%rs3506,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3512,%rs3509,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3515,%rs3512,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3518,%rs3515,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3521,%rs3518,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3524,%rs3521,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3527,%rs3524,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3530,%rs3527,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3533,%rs3530,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3536,%rs3533,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3539,%rs3536,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3542,%rs3539,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3545,%rs3542,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3548,%rs3545,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3551,%rs3548,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3554,%rs3551,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3557,%rs3554,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3560,%rs3557,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3563,%rs3560,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3566,%rs3563,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3569,%rs3566,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3572,%rs3569,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3575,%rs3572,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3578,%rs3575,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3581,%rs3578,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3584,%rs3581,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3587,%rs3584,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3590,%rs3587,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3593,%rs3590,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3596,%rs3593,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3599,%rs3596,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3602,%rs3599,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3605,%rs3602,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3608,%rs3605,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3611,%rs3608,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3614,%rs3611,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3617,%rs3614,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3620,%rs3617,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3623,%rs3620,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3626,%rs3623,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3629,%rs3626,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3632,%rs3629,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3635,%rs3632,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3638,%rs3635,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3641,%rs3638,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3644,%rs3641,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3647,%rs3644,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3650,%rs3647,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3653,%rs3650,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3656,%rs3653,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3659,%rs3656,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3662,%rs3659,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3665,%rs3662,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3668,%rs3665,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3671,%rs3668,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3674,%rs3671,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3677,%rs3674,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3680,%rs3677,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3683,%rs3680,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3686,%rs3683,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3689,%rs3686,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3692,%rs3689,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3695,%rs3692,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3698,%rs3695,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3701,%rs3698,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3704,%rs3701,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3707,%rs3704,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3710,%rs3707,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3713,%rs3710,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3716,%rs3713,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3719,%rs3716,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3722,%rs3719,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3725,%rs3722,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3728,%rs3725,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3731,%rs3728,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3734,%rs3731,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3737,%rs3734,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3740,%rs3737,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3743,%rs3740,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3746,%rs3743,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3749,%rs3746,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3752,%rs3749,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3755,%rs3752,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3758,%rs3755,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3761,%rs3758,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3764,%rs3761,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3767,%rs3764,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3770,%rs3767,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3773,%rs3770,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3776,%rs3773,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3779,%rs3776,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3782,%rs3779,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3785,%rs3782,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3788,%rs3785,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3791,%rs3788,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3794,%rs3791,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3797,%rs3794,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3800,%rs3797,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3803,%rs3800,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3806,%rs3803,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3809,%rs3806,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3812,%rs3809,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3815,%rs3812,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3818,%rs3815,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3821,%rs3818,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3824,%rs3821,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3827,%rs3824,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3830,%rs3827,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3833,%rs3830,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3836,%rs3833,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3839,%rs3836,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3842,%rs3839,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3845,%rs3842,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3848,%rs3845,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3851,%rs3848,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3854,%rs3851,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3857,%rs3854,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3860,%rs3857,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3863,%rs3860,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3866,%rs3863,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3869,%rs3866,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3872,%rs3869,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3875,%rs3872,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3878,%rs3875,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3881,%rs3878,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3884,%rs3881,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3887,%rs3884,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3890,%rs3887,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3893,%rs3890,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3896,%rs3893,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3899,%rs3896,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3902,%rs3899,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3905,%rs3902,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3908,%rs3905,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3911,%rs3908,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3914,%rs3911,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3917,%rs3914,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3920,%rs3917,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3923,%rs3920,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3926,%rs3923,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3929,%rs3926,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3932,%rs3929,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3935,%rs3932,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3938,%rs3935,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3941,%rs3938,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3944,%rs3941,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3947,%rs3944,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3950,%rs3947,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3953,%rs3950,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3956,%rs3953,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3959,%rs3956,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3962,%rs3959,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3965,%rs3962,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3968,%rs3965,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3971,%rs3968,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3974,%rs3971,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3977,%rs3974,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3980,%rs3977,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3983,%rs3980,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3986,%rs3983,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3989,%rs3986,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3992,%rs3989,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3995,%rs3992,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs3998,%rs3995,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4001,%rs3998,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4004,%rs4001,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4007,%rs4004,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4010,%rs4007,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4013,%rs4010,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4016,%rs4013,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4019,%rs4016,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4022,%rs4019,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4025,%rs4022,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4028,%rs4025,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4031,%rs4028,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4034,%rs4031,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4037,%rs4034,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4040,%rs4037,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4043,%rs4040,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4046,%rs4043,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4049,%rs4046,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4052,%rs4049,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4055,%rs4052,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4058,%rs4055,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4061,%rs4058,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4064,%rs4061,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4067,%rs4064,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4070,%rs4067,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4073,%rs4070,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4076,%rs4073,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4079,%rs4076,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4082,%rs4079,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4085,%rs4082,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4088,%rs4085,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4091,%rs4088,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4094,%rs4091,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4097,%rs4094,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4100,%rs4097,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4103,%rs4100,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4106,%rs4103,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4109,%rs4106,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4112,%rs4109,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4115,%rs4112,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4118,%rs4115,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4121,%rs4118,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4124,%rs4121,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4127,%rs4124,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4130,%rs4127,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4133,%rs4130,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4136,%rs4133,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4139,%rs4136,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4142,%rs4139,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4145,%rs4142,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4148,%rs4145,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4151,%rs4148,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4154,%rs4151,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4157,%rs4154,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4160,%rs4157,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4163,%rs4160,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4166,%rs4163,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4169,%rs4166,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4172,%rs4169,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4175,%rs4172,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4178,%rs4175,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4181,%rs4178,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4184,%rs4181,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4187,%rs4184,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4190,%rs4187,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4193,%rs4190,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4196,%rs4193,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4199,%rs4196,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4202,%rs4199,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4205,%rs4202,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4208,%rs4205,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4211,%rs4208,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4214,%rs4211,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4217,%rs4214,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4220,%rs4217,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4223,%rs4220,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4226,%rs4223,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4229,%rs4226,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4232,%rs4229,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4235,%rs4232,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4238,%rs4235,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4241,%rs4238,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4244,%rs4241,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4247,%rs4244,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4250,%rs4247,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4253,%rs4250,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4256,%rs4253,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4259,%rs4256,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4262,%rs4259,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4265,%rs4262,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4268,%rs4265,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4271,%rs4268,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4274,%rs4271,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4277,%rs4274,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4280,%rs4277,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4283,%rs4280,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4286,%rs4283,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4289,%rs4286,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4292,%rs4289,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4295,%rs4292,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4298,%rs4295,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4301,%rs4298,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4304,%rs4301,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4307,%rs4304,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4310,%rs4307,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4313,%rs4310,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4316,%rs4313,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4319,%rs4316,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4322,%rs4319,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4325,%rs4322,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4328,%rs4325,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4331,%rs4328,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4334,%rs4331,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4337,%rs4334,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4340,%rs4337,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4343,%rs4340,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4346,%rs4343,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4349,%rs4346,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4352,%rs4349,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4355,%rs4352,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4358,%rs4355,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4361,%rs4358,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4364,%rs4361,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4367,%rs4364,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4370,%rs4367,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4373,%rs4370,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4376,%rs4373,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4379,%rs4376,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4382,%rs4379,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4385,%rs4382,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4388,%rs4385,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4391,%rs4388,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4394,%rs4391,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4397,%rs4394,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4400,%rs4397,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4403,%rs4400,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4406,%rs4403,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4409,%rs4406,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4412,%rs4409,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4415,%rs4412,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4418,%rs4415,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4421,%rs4418,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4424,%rs4421,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4427,%rs4424,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4430,%rs4427,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4433,%rs4430,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4436,%rs4433,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4439,%rs4436,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4442,%rs4439,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4445,%rs4442,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4448,%rs4445,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4451,%rs4448,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4454,%rs4451,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4457,%rs4454,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4460,%rs4457,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4463,%rs4460,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4466,%rs4463,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4469,%rs4466,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4472,%rs4469,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4475,%rs4472,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4478,%rs4475,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4481,%rs4478,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4484,%rs4481,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4487,%rs4484,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4490,%rs4487,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4493,%rs4490,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4496,%rs4493,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4499,%rs4496,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4502,%rs4499,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4505,%rs4502,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4508,%rs4505,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4511,%rs4508,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4514,%rs4511,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4517,%rs4514,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4520,%rs4517,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4523,%rs4520,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4526,%rs4523,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4529,%rs4526,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4532,%rs4529,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4535,%rs4532,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4538,%rs4535,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4541,%rs4538,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4544,%rs4541,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4547,%rs4544,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4550,%rs4547,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4553,%rs4550,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4556,%rs4553,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4559,%rs4556,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4562,%rs4559,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4565,%rs4562,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4568,%rs4565,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4571,%rs4568,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4574,%rs4571,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4577,%rs4574,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4580,%rs4577,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4583,%rs4580,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4586,%rs4583,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4589,%rs4586,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4592,%rs4589,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4595,%rs4592,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4598,%rs4595,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4601,%rs4598,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4604,%rs4601,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4607,%rs4604,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4610,%rs4607,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4613,%rs4610,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4616,%rs4613,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4619,%rs4616,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4622,%rs4619,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4625,%rs4622,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4628,%rs4625,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4631,%rs4628,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4634,%rs4631,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4637,%rs4634,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4640,%rs4637,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4643,%rs4640,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4646,%rs4643,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4649,%rs4646,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4652,%rs4649,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4655,%rs4652,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4658,%rs4655,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4661,%rs4658,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4664,%rs4661,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4667,%rs4664,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4670,%rs4667,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4673,%rs4670,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4676,%rs4673,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4679,%rs4676,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4682,%rs4679,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4685,%rs4682,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4688,%rs4685,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4691,%rs4688,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4694,%rs4691,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4697,%rs4694,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4700,%rs4697,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4703,%rs4700,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4706,%rs4703,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4709,%rs4706,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4712,%rs4709,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4715,%rs4712,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4718,%rs4715,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4721,%rs4718,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4724,%rs4721,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4727,%rs4724,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4730,%rs4727,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4733,%rs4730,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4736,%rs4733,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4739,%rs4736,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4742,%rs4739,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4745,%rs4742,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4748,%rs4745,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4751,%rs4748,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4754,%rs4751,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4757,%rs4754,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4760,%rs4757,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4763,%rs4760,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4766,%rs4763,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4769,%rs4766,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4772,%rs4769,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4775,%rs4772,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4778,%rs4775,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4781,%rs4778,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4784,%rs4781,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4787,%rs4784,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4790,%rs4787,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4793,%rs4790,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4796,%rs4793,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4799,%rs4796,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4802,%rs4799,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4805,%rs4802,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4808,%rs4805,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4811,%rs4808,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4814,%rs4811,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4817,%rs4814,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4820,%rs4817,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4823,%rs4820,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4826,%rs4823,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4829,%rs4826,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4832,%rs4829,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4835,%rs4832,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4838,%rs4835,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4841,%rs4838,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4844,%rs4841,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4847,%rs4844,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4850,%rs4847,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4853,%rs4850,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4856,%rs4853,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4859,%rs4856,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4862,%rs4859,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4865,%rs4862,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4868,%rs4865,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4871,%rs4868,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4874,%rs4871,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4877,%rs4874,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4880,%rs4877,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4883,%rs4880,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4886,%rs4883,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4889,%rs4886,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4892,%rs4889,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4895,%rs4892,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4898,%rs4895,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4901,%rs4898,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4904,%rs4901,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4907,%rs4904,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4910,%rs4907,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4913,%rs4910,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4916,%rs4913,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4919,%rs4916,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4922,%rs4919,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4925,%rs4922,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4928,%rs4925,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4931,%rs4928,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4934,%rs4931,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4937,%rs4934,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4940,%rs4937,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4943,%rs4940,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4946,%rs4943,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4949,%rs4946,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4952,%rs4949,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4955,%rs4952,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4958,%rs4955,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4961,%rs4958,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4964,%rs4961,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4967,%rs4964,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4970,%rs4967,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4973,%rs4970,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4976,%rs4973,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4979,%rs4976,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4982,%rs4979,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4985,%rs4982,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4988,%rs4985,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4991,%rs4988,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4994,%rs4991,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs4997,%rs4994,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5000,%rs4997,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5003,%rs5000,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5006,%rs5003,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5009,%rs5006,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5012,%rs5009,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5015,%rs5012,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5018,%rs5015,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5021,%rs5018,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5024,%rs5021,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5027,%rs5024,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5030,%rs5027,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5033,%rs5030,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5036,%rs5033,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5039,%rs5036,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5042,%rs5039,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5045,%rs5042,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5048,%rs5045,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5051,%rs5048,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5054,%rs5051,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5057,%rs5054,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5060,%rs5057,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5063,%rs5060,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5066,%rs5063,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5069,%rs5066,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5072,%rs5069,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5075,%rs5072,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5078,%rs5075,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5081,%rs5078,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5084,%rs5081,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5087,%rs5084,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5090,%rs5087,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5093,%rs5090,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5096,%rs5093,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5099,%rs5096,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5102,%rs5099,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5105,%rs5102,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5108,%rs5105,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5111,%rs5108,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5114,%rs5111,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5117,%rs5114,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5120,%rs5117,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5123,%rs5120,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5126,%rs5123,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5129,%rs5126,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5132,%rs5129,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5135,%rs5132,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5138,%rs5135,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5141,%rs5138,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5144,%rs5141,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5147,%rs5144,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5150,%rs5147,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5153,%rs5150,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5156,%rs5153,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5159,%rs5156,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5162,%rs5159,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5165,%rs5162,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5168,%rs5165,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5171,%rs5168,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5174,%rs5171,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5177,%rs5174,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5180,%rs5177,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5183,%rs5180,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5186,%rs5183,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5189,%rs5186,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5192,%rs5189,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5195,%rs5192,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5198,%rs5195,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5201,%rs5198,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5204,%rs5201,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5207,%rs5204,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5210,%rs5207,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5213,%rs5210,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5216,%rs5213,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5219,%rs5216,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5222,%rs5219,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5225,%rs5222,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5228,%rs5225,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5231,%rs5228,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5234,%rs5231,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5237,%rs5234,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5240,%rs5237,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5243,%rs5240,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5246,%rs5243,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5249,%rs5246,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5252,%rs5249,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5255,%rs5252,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5258,%rs5255,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5261,%rs5258,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5264,%rs5261,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5267,%rs5264,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5270,%rs5267,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5273,%rs5270,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5276,%rs5273,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5279,%rs5276,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5282,%rs5279,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5285,%rs5282,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5288,%rs5285,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5291,%rs5288,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5294,%rs5291,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5297,%rs5294,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5300,%rs5297,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5303,%rs5300,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5306,%rs5303,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5309,%rs5306,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5312,%rs5309,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5315,%rs5312,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5318,%rs5315,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5321,%rs5318,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5324,%rs5321,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5327,%rs5324,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5330,%rs5327,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5333,%rs5330,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5336,%rs5333,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5339,%rs5336,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5342,%rs5339,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5345,%rs5342,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5348,%rs5345,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5351,%rs5348,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5354,%rs5351,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5357,%rs5354,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5360,%rs5357,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5363,%rs5360,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5366,%rs5363,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5369,%rs5366,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5372,%rs5369,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5375,%rs5372,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5378,%rs5375,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5381,%rs5378,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5384,%rs5381,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5387,%rs5384,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5390,%rs5387,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5393,%rs5390,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5396,%rs5393,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5399,%rs5396,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5402,%rs5399,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5405,%rs5402,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5408,%rs5405,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5411,%rs5408,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5414,%rs5411,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5417,%rs5414,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5420,%rs5417,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5423,%rs5420,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5426,%rs5423,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5429,%rs5426,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5432,%rs5429,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5435,%rs5432,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5438,%rs5435,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5441,%rs5438,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5444,%rs5441,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5447,%rs5444,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5450,%rs5447,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5453,%rs5450,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5456,%rs5453,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5459,%rs5456,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5462,%rs5459,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5465,%rs5462,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5468,%rs5465,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5471,%rs5468,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5474,%rs5471,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5477,%rs5474,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5480,%rs5477,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5483,%rs5480,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5486,%rs5483,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5489,%rs5486,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5492,%rs5489,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5495,%rs5492,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5498,%rs5495,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5501,%rs5498,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5504,%rs5501,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5507,%rs5504,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5510,%rs5507,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5513,%rs5510,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5516,%rs5513,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5519,%rs5516,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5522,%rs5519,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5525,%rs5522,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5528,%rs5525,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5531,%rs5528,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5534,%rs5531,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5537,%rs5534,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5540,%rs5537,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5543,%rs5540,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5546,%rs5543,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5549,%rs5546,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5552,%rs5549,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5555,%rs5552,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5558,%rs5555,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5561,%rs5558,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5564,%rs5561,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5567,%rs5564,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5570,%rs5567,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5573,%rs5570,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5576,%rs5573,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5579,%rs5576,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5582,%rs5579,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5585,%rs5582,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5588,%rs5585,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5591,%rs5588,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5594,%rs5591,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5597,%rs5594,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5600,%rs5597,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5603,%rs5600,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5606,%rs5603,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5609,%rs5606,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5612,%rs5609,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5615,%rs5612,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5618,%rs5615,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5621,%rs5618,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5624,%rs5621,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5627,%rs5624,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5630,%rs5627,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5633,%rs5630,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5636,%rs5633,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5639,%rs5636,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5642,%rs5639,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5645,%rs5642,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5648,%rs5645,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5651,%rs5648,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5654,%rs5651,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5657,%rs5654,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5660,%rs5657,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5663,%rs5660,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5666,%rs5663,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5669,%rs5666,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5672,%rs5669,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5675,%rs5672,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5678,%rs5675,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5681,%rs5678,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5684,%rs5681,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5687,%rs5684,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5690,%rs5687,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5693,%rs5690,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5696,%rs5693,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5699,%rs5696,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5702,%rs5699,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5705,%rs5702,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5708,%rs5705,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5711,%rs5708,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5714,%rs5711,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5717,%rs5714,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5720,%rs5717,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5723,%rs5720,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5726,%rs5723,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5729,%rs5726,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5732,%rs5729,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5735,%rs5732,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5738,%rs5735,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5741,%rs5738,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5744,%rs5741,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5747,%rs5744,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5750,%rs5747,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5753,%rs5750,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5756,%rs5753,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5759,%rs5756,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5762,%rs5759,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5765,%rs5762,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5768,%rs5765,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5771,%rs5768,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5774,%rs5771,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5777,%rs5774,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5780,%rs5777,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5783,%rs5780,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5786,%rs5783,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5789,%rs5786,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5792,%rs5789,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5795,%rs5792,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5798,%rs5795,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5801,%rs5798,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5804,%rs5801,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5807,%rs5804,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5810,%rs5807,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5813,%rs5810,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5816,%rs5813,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5819,%rs5816,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5822,%rs5819,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5825,%rs5822,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5828,%rs5825,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5831,%rs5828,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5834,%rs5831,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5837,%rs5834,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5840,%rs5837,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5843,%rs5840,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5846,%rs5843,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5849,%rs5846,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5852,%rs5849,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5855,%rs5852,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5858,%rs5855,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5861,%rs5858,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5864,%rs5861,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5867,%rs5864,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5870,%rs5867,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5873,%rs5870,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5876,%rs5873,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5879,%rs5876,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5882,%rs5879,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5885,%rs5882,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5888,%rs5885,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5891,%rs5888,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5894,%rs5891,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5897,%rs5894,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5900,%rs5897,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5903,%rs5900,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5906,%rs5903,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5909,%rs5906,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5912,%rs5909,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5915,%rs5912,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5918,%rs5915,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5921,%rs5918,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5924,%rs5921,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5927,%rs5924,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5930,%rs5927,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5933,%rs5930,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5936,%rs5933,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5939,%rs5936,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5942,%rs5939,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5945,%rs5942,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5948,%rs5945,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5951,%rs5948,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5954,%rs5951,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5957,%rs5954,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5960,%rs5957,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5963,%rs5960,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5966,%rs5963,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5969,%rs5966,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5972,%rs5969,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5975,%rs5972,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5978,%rs5975,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5981,%rs5978,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5984,%rs5981,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5987,%rs5984,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5990,%rs5987,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5993,%rs5990,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5996,%rs5993,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs5999,%rs5996,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6002,%rs5999,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6005,%rs6002,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6008,%rs6005,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6011,%rs6008,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6014,%rs6011,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6017,%rs6014,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6020,%rs6017,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6023,%rs6020,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6026,%rs6023,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6029,%rs6026,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6032,%rs6029,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6035,%rs6032,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6038,%rs6035,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6041,%rs6038,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6044,%rs6041,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6047,%rs6044,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6050,%rs6047,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6053,%rs6050,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6056,%rs6053,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6059,%rs6056,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6062,%rs6059,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6065,%rs6062,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6068,%rs6065,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6071,%rs6068,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6074,%rs6071,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6077,%rs6074,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6080,%rs6077,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6083,%rs6080,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6086,%rs6083,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6089,%rs6086,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6092,%rs6089,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6095,%rs6092,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6098,%rs6095,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6101,%rs6098,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6104,%rs6101,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6107,%rs6104,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6110,%rs6107,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6113,%rs6110,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6116,%rs6113,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6119,%rs6116,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6122,%rs6119,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6125,%rs6122,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6128,%rs6125,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6131,%rs6128,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6134,%rs6131,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6137,%rs6134,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6140,%rs6137,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6143,%rs6140,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6146,%rs6143,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6149,%rs6146,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6152,%rs6149,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6155,%rs6152,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6158,%rs6155,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6161,%rs6158,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6164,%rs6161,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6167,%rs6164,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6170,%rs6167,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6173,%rs6170,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6176,%rs6173,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6179,%rs6176,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6182,%rs6179,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6185,%rs6182,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6188,%rs6185,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6191,%rs6188,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6194,%rs6191,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6197,%rs6194,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6200,%rs6197,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6203,%rs6200,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6206,%rs6203,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6209,%rs6206,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6212,%rs6209,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6215,%rs6212,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6218,%rs6215,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6221,%rs6218,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6224,%rs6221,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6227,%rs6224,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6230,%rs6227,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6233,%rs6230,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6236,%rs6233,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6239,%rs6236,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6242,%rs6239,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6245,%rs6242,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6248,%rs6245,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6251,%rs6248,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6254,%rs6251,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6257,%rs6254,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6260,%rs6257,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6263,%rs6260,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6266,%rs6263,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6269,%rs6266,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6272,%rs6269,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6275,%rs6272,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6278,%rs6275,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6281,%rs6278,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6284,%rs6281,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6287,%rs6284,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6290,%rs6287,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6293,%rs6290,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6296,%rs6293,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6299,%rs6296,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6302,%rs6299,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6305,%rs6302,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6308,%rs6305,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6311,%rs6308,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6314,%rs6311,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6317,%rs6314,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6320,%rs6317,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6323,%rs6320,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6326,%rs6323,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6329,%rs6326,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6332,%rs6329,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6335,%rs6332,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6338,%rs6335,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6341,%rs6338,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6344,%rs6341,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6347,%rs6344,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6350,%rs6347,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6353,%rs6350,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6356,%rs6353,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6359,%rs6356,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6362,%rs6359,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6365,%rs6362,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6368,%rs6365,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6371,%rs6368,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6374,%rs6371,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6377,%rs6374,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6380,%rs6377,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6383,%rs6380,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6386,%rs6383,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6389,%rs6386,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6392,%rs6389,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6395,%rs6392,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6398,%rs6395,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6401,%rs6398,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6404,%rs6401,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6407,%rs6404,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6410,%rs6407,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6413,%rs6410,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6416,%rs6413,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6419,%rs6416,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6422,%rs6419,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6425,%rs6422,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6428,%rs6425,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6431,%rs6428,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6434,%rs6431,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6437,%rs6434,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6440,%rs6437,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6443,%rs6440,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6446,%rs6443,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6449,%rs6446,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6452,%rs6449,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6455,%rs6452,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6458,%rs6455,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6461,%rs6458,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6464,%rs6461,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6467,%rs6464,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6470,%rs6467,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6473,%rs6470,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6476,%rs6473,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6479,%rs6476,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6482,%rs6479,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6485,%rs6482,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6488,%rs6485,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6491,%rs6488,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6494,%rs6491,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6497,%rs6494,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6500,%rs6497,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6503,%rs6500,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6506,%rs6503,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6509,%rs6506,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6512,%rs6509,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6515,%rs6512,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6518,%rs6515,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6521,%rs6518,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6524,%rs6521,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6527,%rs6524,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6530,%rs6527,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6533,%rs6530,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6536,%rs6533,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6539,%rs6536,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6542,%rs6539,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6545,%rs6542,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6548,%rs6545,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6551,%rs6548,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6554,%rs6551,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6557,%rs6554,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6560,%rs6557,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6563,%rs6560,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6566,%rs6563,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6569,%rs6566,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6572,%rs6569,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6575,%rs6572,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6578,%rs6575,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6581,%rs6578,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6584,%rs6581,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6587,%rs6584,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6590,%rs6587,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6593,%rs6590,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6596,%rs6593,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6599,%rs6596,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6602,%rs6599,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6605,%rs6602,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6608,%rs6605,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6611,%rs6608,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6614,%rs6611,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6617,%rs6614,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6620,%rs6617,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6623,%rs6620,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6626,%rs6623,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6629,%rs6626,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6632,%rs6629,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6635,%rs6632,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6638,%rs6635,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6641,%rs6638,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6644,%rs6641,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6647,%rs6644,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6650,%rs6647,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6653,%rs6650,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6656,%rs6653,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6659,%rs6656,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6662,%rs6659,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6665,%rs6662,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6668,%rs6665,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6671,%rs6668,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6674,%rs6671,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6677,%rs6674,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6680,%rs6677,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6683,%rs6680,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6686,%rs6683,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6689,%rs6686,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6692,%rs6689,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6695,%rs6692,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6698,%rs6695,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6701,%rs6698,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6704,%rs6701,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6707,%rs6704,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6710,%rs6707,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6713,%rs6710,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6716,%rs6713,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6719,%rs6716,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6722,%rs6719,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6725,%rs6722,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6728,%rs6725,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6731,%rs6728,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6734,%rs6731,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6737,%rs6734,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6740,%rs6737,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6743,%rs6740,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6746,%rs6743,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6749,%rs6746,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6752,%rs6749,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6755,%rs6752,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6758,%rs6755,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6761,%rs6758,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6764,%rs6761,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6767,%rs6764,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6770,%rs6767,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6773,%rs6770,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6776,%rs6773,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6779,%rs6776,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6782,%rs6779,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6785,%rs6782,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6788,%rs6785,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6791,%rs6788,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6794,%rs6791,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6797,%rs6794,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6800,%rs6797,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6803,%rs6800,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6806,%rs6803,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6809,%rs6806,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6812,%rs6809,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6815,%rs6812,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6818,%rs6815,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6821,%rs6818,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6824,%rs6821,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6827,%rs6824,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6830,%rs6827,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6833,%rs6830,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6836,%rs6833,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6839,%rs6836,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6842,%rs6839,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6845,%rs6842,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6848,%rs6845,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6851,%rs6848,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6854,%rs6851,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6857,%rs6854,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6860,%rs6857,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6863,%rs6860,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6866,%rs6863,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6869,%rs6866,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6872,%rs6869,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6875,%rs6872,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6878,%rs6875,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6881,%rs6878,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6884,%rs6881,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6887,%rs6884,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6890,%rs6887,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6893,%rs6890,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6896,%rs6893,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6899,%rs6896,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6902,%rs6899,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6905,%rs6902,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6908,%rs6905,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6911,%rs6908,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6914,%rs6911,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6917,%rs6914,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6920,%rs6917,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6923,%rs6920,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6926,%rs6923,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6929,%rs6926,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6932,%rs6929,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6935,%rs6932,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6938,%rs6935,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6941,%rs6938,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6944,%rs6941,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6947,%rs6944,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6950,%rs6947,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6953,%rs6950,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6956,%rs6953,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6959,%rs6956,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6962,%rs6959,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6965,%rs6962,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6968,%rs6965,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6971,%rs6968,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6974,%rs6971,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6977,%rs6974,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6980,%rs6977,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6983,%rs6980,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6986,%rs6983,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6989,%rs6986,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6992,%rs6989,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6995,%rs6992,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs6998,%rs6995,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7001,%rs6998,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7004,%rs7001,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7007,%rs7004,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7010,%rs7007,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7013,%rs7010,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7016,%rs7013,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7019,%rs7016,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7022,%rs7019,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7025,%rs7022,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7028,%rs7025,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7031,%rs7028,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7034,%rs7031,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7037,%rs7034,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7040,%rs7037,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7043,%rs7040,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7046,%rs7043,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7049,%rs7046,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7052,%rs7049,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7055,%rs7052,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7058,%rs7055,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7061,%rs7058,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7064,%rs7061,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7067,%rs7064,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7070,%rs7067,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7073,%rs7070,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7076,%rs7073,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7079,%rs7076,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7082,%rs7079,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7085,%rs7082,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7088,%rs7085,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7091,%rs7088,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7094,%rs7091,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7097,%rs7094,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7100,%rs7097,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7103,%rs7100,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7106,%rs7103,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7109,%rs7106,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7112,%rs7109,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7115,%rs7112,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7118,%rs7115,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7121,%rs7118,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7124,%rs7121,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7127,%rs7124,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7130,%rs7127,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7133,%rs7130,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7136,%rs7133,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7139,%rs7136,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7142,%rs7139,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7145,%rs7142,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7148,%rs7145,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7151,%rs7148,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7154,%rs7151,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7157,%rs7154,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7160,%rs7157,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7163,%rs7160,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7166,%rs7163,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7169,%rs7166,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7172,%rs7169,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7175,%rs7172,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7178,%rs7175,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7181,%rs7178,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7184,%rs7181,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7187,%rs7184,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7190,%rs7187,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7193,%rs7190,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7196,%rs7193,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7199,%rs7196,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7202,%rs7199,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7205,%rs7202,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7208,%rs7205,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7211,%rs7208,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7214,%rs7211,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7217,%rs7214,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7220,%rs7217,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7223,%rs7220,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7226,%rs7223,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7229,%rs7226,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7232,%rs7229,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7235,%rs7232,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7238,%rs7235,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7241,%rs7238,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7244,%rs7241,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7247,%rs7244,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7250,%rs7247,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7253,%rs7250,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7256,%rs7253,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7259,%rs7256,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7262,%rs7259,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7265,%rs7262,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7268,%rs7265,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7271,%rs7268,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7274,%rs7271,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7277,%rs7274,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7280,%rs7277,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7283,%rs7280,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7286,%rs7283,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7289,%rs7286,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7292,%rs7289,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7295,%rs7292,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7298,%rs7295,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7301,%rs7298,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7304,%rs7301,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7307,%rs7304,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7310,%rs7307,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7313,%rs7310,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7316,%rs7313,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7319,%rs7316,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7322,%rs7319,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7325,%rs7322,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7328,%rs7325,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7331,%rs7328,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7334,%rs7331,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7337,%rs7334,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7340,%rs7337,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7343,%rs7340,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7346,%rs7343,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7349,%rs7346,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7352,%rs7349,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7355,%rs7352,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7358,%rs7355,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7361,%rs7358,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7364,%rs7361,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7367,%rs7364,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7370,%rs7367,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7373,%rs7370,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7376,%rs7373,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7379,%rs7376,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7382,%rs7379,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7385,%rs7382,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7388,%rs7385,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7391,%rs7388,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7394,%rs7391,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7397,%rs7394,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7400,%rs7397,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7403,%rs7400,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7406,%rs7403,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7409,%rs7406,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7412,%rs7409,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7415,%rs7412,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7418,%rs7415,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7421,%rs7418,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7424,%rs7421,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7427,%rs7424,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7430,%rs7427,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7433,%rs7430,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7436,%rs7433,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7439,%rs7436,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7442,%rs7439,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7445,%rs7442,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7448,%rs7445,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7451,%rs7448,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7454,%rs7451,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7457,%rs7454,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7460,%rs7457,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7463,%rs7460,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7466,%rs7463,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7469,%rs7466,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7472,%rs7469,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7475,%rs7472,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7478,%rs7475,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7481,%rs7478,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7484,%rs7481,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7487,%rs7484,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7490,%rs7487,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7493,%rs7490,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7496,%rs7493,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7499,%rs7496,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7502,%rs7499,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7505,%rs7502,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7508,%rs7505,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7511,%rs7508,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7514,%rs7511,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7517,%rs7514,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7520,%rs7517,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7523,%rs7520,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7526,%rs7523,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7529,%rs7526,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7532,%rs7529,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7535,%rs7532,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7538,%rs7535,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7541,%rs7538,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7544,%rs7541,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7547,%rs7544,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7550,%rs7547,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7553,%rs7550,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7556,%rs7553,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7559,%rs7556,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7562,%rs7559,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7565,%rs7562,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7568,%rs7565,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7571,%rs7568,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7574,%rs7571,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7577,%rs7574,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7580,%rs7577,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7583,%rs7580,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7586,%rs7583,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7589,%rs7586,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7592,%rs7589,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7595,%rs7592,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7598,%rs7595,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7601,%rs7598,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7604,%rs7601,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7607,%rs7604,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7610,%rs7607,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7613,%rs7610,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7616,%rs7613,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7619,%rs7616,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7622,%rs7619,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7625,%rs7622,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7628,%rs7625,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7631,%rs7628,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7634,%rs7631,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7637,%rs7634,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7640,%rs7637,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7643,%rs7640,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7646,%rs7643,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7649,%rs7646,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7652,%rs7649,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7655,%rs7652,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7658,%rs7655,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7661,%rs7658,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7664,%rs7661,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7667,%rs7664,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7670,%rs7667,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7673,%rs7670,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7676,%rs7673,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7679,%rs7676,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7682,%rs7679,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7685,%rs7682,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7688,%rs7685,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7691,%rs7688,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7694,%rs7691,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7697,%rs7694,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7700,%rs7697,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7703,%rs7700,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7706,%rs7703,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7709,%rs7706,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7712,%rs7709,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7715,%rs7712,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7718,%rs7715,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7721,%rs7718,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7724,%rs7721,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7727,%rs7724,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7730,%rs7727,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7733,%rs7730,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7736,%rs7733,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7739,%rs7736,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7742,%rs7739,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7745,%rs7742,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7748,%rs7745,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7751,%rs7748,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7754,%rs7751,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7757,%rs7754,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7760,%rs7757,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7763,%rs7760,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7766,%rs7763,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7769,%rs7766,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7772,%rs7769,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7775,%rs7772,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7778,%rs7775,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7781,%rs7778,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7784,%rs7781,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7787,%rs7784,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7790,%rs7787,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7793,%rs7790,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7796,%rs7793,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7799,%rs7796,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7802,%rs7799,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7805,%rs7802,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7808,%rs7805,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7811,%rs7808,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7814,%rs7811,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7817,%rs7814,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7820,%rs7817,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7823,%rs7820,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7826,%rs7823,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7829,%rs7826,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7832,%rs7829,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7835,%rs7832,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7838,%rs7835,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7841,%rs7838,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7844,%rs7841,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7847,%rs7844,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7850,%rs7847,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7853,%rs7850,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7856,%rs7853,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7859,%rs7856,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7862,%rs7859,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7865,%rs7862,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7868,%rs7865,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7871,%rs7868,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7874,%rs7871,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7877,%rs7874,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7880,%rs7877,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7883,%rs7880,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7886,%rs7883,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7889,%rs7886,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7892,%rs7889,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7895,%rs7892,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7898,%rs7895,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7901,%rs7898,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7904,%rs7901,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7907,%rs7904,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7910,%rs7907,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7913,%rs7910,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7916,%rs7913,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7919,%rs7916,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7922,%rs7919,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7925,%rs7922,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7928,%rs7925,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7931,%rs7928,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7934,%rs7931,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7937,%rs7934,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7940,%rs7937,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7943,%rs7940,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7946,%rs7943,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7949,%rs7946,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7952,%rs7949,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7955,%rs7952,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7958,%rs7955,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7961,%rs7958,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7964,%rs7961,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7967,%rs7964,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7970,%rs7967,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7973,%rs7970,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7976,%rs7973,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7979,%rs7976,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7982,%rs7979,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7985,%rs7982,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7988,%rs7985,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7991,%rs7988,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7994,%rs7991,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs7997,%rs7994,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8000,%rs7997,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8003,%rs8000,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8006,%rs8003,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8009,%rs8006,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8012,%rs8009,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8015,%rs8012,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8018,%rs8015,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8021,%rs8018,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8024,%rs8021,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8027,%rs8024,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8030,%rs8027,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8033,%rs8030,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8036,%rs8033,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8039,%rs8036,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8042,%rs8039,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8045,%rs8042,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8048,%rs8045,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8051,%rs8048,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8054,%rs8051,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8057,%rs8054,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8060,%rs8057,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8063,%rs8060,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8066,%rs8063,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8069,%rs8066,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8072,%rs8069,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8075,%rs8072,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8078,%rs8075,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8081,%rs8078,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8084,%rs8081,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8087,%rs8084,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8090,%rs8087,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8093,%rs8090,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8096,%rs8093,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8099,%rs8096,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8102,%rs8099,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8105,%rs8102,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8108,%rs8105,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8111,%rs8108,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8114,%rs8111,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8117,%rs8114,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8120,%rs8117,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8123,%rs8120,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8126,%rs8123,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8129,%rs8126,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8132,%rs8129,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8135,%rs8132,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8138,%rs8135,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8141,%rs8138,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8144,%rs8141,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8147,%rs8144,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8150,%rs8147,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8153,%rs8150,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8156,%rs8153,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8159,%rs8156,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8162,%rs8159,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8165,%rs8162,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8168,%rs8165,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8171,%rs8168,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8174,%rs8171,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8177,%rs8174,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8180,%rs8177,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8183,%rs8180,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8186,%rs8183,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8189,%rs8186,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8192,%rs8189,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8195,%rs8192,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8198,%rs8195,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8201,%rs8198,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8204,%rs8201,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8207,%rs8204,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8210,%rs8207,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8213,%rs8210,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8216,%rs8213,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8219,%rs8216,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8222,%rs8219,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8225,%rs8222,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8228,%rs8225,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8231,%rs8228,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8234,%rs8231,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8237,%rs8234,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8240,%rs8237,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8243,%rs8240,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8246,%rs8243,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8249,%rs8246,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8252,%rs8249,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8255,%rs8252,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8258,%rs8255,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8261,%rs8258,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8264,%rs8261,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8267,%rs8264,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8270,%rs8267,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8273,%rs8270,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8276,%rs8273,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8279,%rs8276,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8282,%rs8279,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8285,%rs8282,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8288,%rs8285,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8291,%rs8288,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8294,%rs8291,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8297,%rs8294,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8300,%rs8297,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8303,%rs8300,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8306,%rs8303,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8309,%rs8306,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8312,%rs8309,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8315,%rs8312,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8318,%rs8315,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8321,%rs8318,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8324,%rs8321,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8327,%rs8324,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8330,%rs8327,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8333,%rs8330,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8336,%rs8333,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8339,%rs8336,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8342,%rs8339,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8345,%rs8342,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8348,%rs8345,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8351,%rs8348,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8354,%rs8351,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8357,%rs8354,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8360,%rs8357,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8363,%rs8360,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8366,%rs8363,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8369,%rs8366,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8372,%rs8369,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8375,%rs8372,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8378,%rs8375,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8381,%rs8378,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8384,%rs8381,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8387,%rs8384,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8390,%rs8387,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8393,%rs8390,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8396,%rs8393,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8399,%rs8396,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8402,%rs8399,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8405,%rs8402,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8408,%rs8405,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8411,%rs8408,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8414,%rs8411,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8417,%rs8414,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8420,%rs8417,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8423,%rs8420,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8426,%rs8423,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8429,%rs8426,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8432,%rs8429,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8435,%rs8432,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8438,%rs8435,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8441,%rs8438,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8444,%rs8441,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8447,%rs8444,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8450,%rs8447,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8453,%rs8450,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8456,%rs8453,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8459,%rs8456,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8462,%rs8459,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8465,%rs8462,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8468,%rs8465,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8471,%rs8468,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8474,%rs8471,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8477,%rs8474,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8480,%rs8477,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8483,%rs8480,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8486,%rs8483,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8489,%rs8486,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8492,%rs8489,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8495,%rs8492,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8498,%rs8495,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8501,%rs8498,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8504,%rs8501,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8507,%rs8504,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8510,%rs8507,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8513,%rs8510,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8516,%rs8513,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8519,%rs8516,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8522,%rs8519,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8525,%rs8522,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8528,%rs8525,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8531,%rs8528,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8534,%rs8531,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8537,%rs8534,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8540,%rs8537,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8543,%rs8540,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8546,%rs8543,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8549,%rs8546,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8552,%rs8549,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8555,%rs8552,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8558,%rs8555,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8561,%rs8558,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8564,%rs8561,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8567,%rs8564,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8570,%rs8567,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8573,%rs8570,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8576,%rs8573,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8579,%rs8576,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8582,%rs8579,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8585,%rs8582,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8588,%rs8585,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8591,%rs8588,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8594,%rs8591,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8597,%rs8594,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8600,%rs8597,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8603,%rs8600,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8606,%rs8603,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8609,%rs8606,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8612,%rs8609,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8615,%rs8612,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8618,%rs8615,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8621,%rs8618,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8624,%rs8621,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8627,%rs8624,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8630,%rs8627,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8633,%rs8630,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8636,%rs8633,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8639,%rs8636,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8642,%rs8639,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8645,%rs8642,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8648,%rs8645,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8651,%rs8648,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8654,%rs8651,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8657,%rs8654,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8660,%rs8657,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8663,%rs8660,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8666,%rs8663,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8669,%rs8666,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8672,%rs8669,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8675,%rs8672,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8678,%rs8675,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8681,%rs8678,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8684,%rs8681,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8687,%rs8684,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8690,%rs8687,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8693,%rs8690,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8696,%rs8693,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8699,%rs8696,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8702,%rs8699,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8705,%rs8702,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8708,%rs8705,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8711,%rs8708,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8714,%rs8711,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8717,%rs8714,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8720,%rs8717,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8723,%rs8720,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8726,%rs8723,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8729,%rs8726,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8732,%rs8729,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8735,%rs8732,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8738,%rs8735,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8741,%rs8738,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8744,%rs8741,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8747,%rs8744,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8750,%rs8747,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8753,%rs8750,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8756,%rs8753,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8759,%rs8756,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8762,%rs8759,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8765,%rs8762,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8768,%rs8765,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8771,%rs8768,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8774,%rs8771,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8777,%rs8774,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8780,%rs8777,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8783,%rs8780,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8786,%rs8783,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8789,%rs8786,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8792,%rs8789,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8795,%rs8792,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8798,%rs8795,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8801,%rs8798,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8804,%rs8801,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8807,%rs8804,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8810,%rs8807,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8813,%rs8810,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8816,%rs8813,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8819,%rs8816,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8822,%rs8819,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8825,%rs8822,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8828,%rs8825,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8831,%rs8828,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8834,%rs8831,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8837,%rs8834,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8840,%rs8837,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8843,%rs8840,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8846,%rs8843,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8849,%rs8846,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8852,%rs8849,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8855,%rs8852,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8858,%rs8855,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8861,%rs8858,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8864,%rs8861,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8867,%rs8864,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8870,%rs8867,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8873,%rs8870,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8876,%rs8873,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8879,%rs8876,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8882,%rs8879,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8885,%rs8882,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8888,%rs8885,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8891,%rs8888,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8894,%rs8891,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8897,%rs8894,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8900,%rs8897,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8903,%rs8900,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8906,%rs8903,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8909,%rs8906,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8912,%rs8909,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8915,%rs8912,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8918,%rs8915,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8921,%rs8918,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8924,%rs8921,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8927,%rs8924,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8930,%rs8927,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8933,%rs8930,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8936,%rs8933,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8939,%rs8936,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8942,%rs8939,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8945,%rs8942,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8948,%rs8945,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8951,%rs8948,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8954,%rs8951,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8957,%rs8954,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8960,%rs8957,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8963,%rs8960,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8966,%rs8963,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8969,%rs8966,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8972,%rs8969,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8975,%rs8972,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8978,%rs8975,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8981,%rs8978,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8984,%rs8981,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8987,%rs8984,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8990,%rs8987,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8993,%rs8990,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8996,%rs8993,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs8999,%rs8996,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9002,%rs8999,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9005,%rs9002,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9008,%rs9005,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9011,%rs9008,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9014,%rs9011,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9017,%rs9014,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9020,%rs9017,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9023,%rs9020,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9026,%rs9023,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9029,%rs9026,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9032,%rs9029,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9035,%rs9032,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9038,%rs9035,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9041,%rs9038,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9044,%rs9041,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9047,%rs9044,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9050,%rs9047,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9053,%rs9050,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9056,%rs9053,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9059,%rs9056,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9062,%rs9059,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9065,%rs9062,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9068,%rs9065,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9071,%rs9068,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9074,%rs9071,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9077,%rs9074,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9080,%rs9077,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9083,%rs9080,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9086,%rs9083,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9089,%rs9086,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9092,%rs9089,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9095,%rs9092,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9098,%rs9095,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9101,%rs9098,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9104,%rs9101,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9107,%rs9104,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9110,%rs9107,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9113,%rs9110,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9116,%rs9113,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9119,%rs9116,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9122,%rs9119,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9125,%rs9122,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9128,%rs9125,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9131,%rs9128,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9134,%rs9131,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9137,%rs9134,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9140,%rs9137,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9143,%rs9140,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9146,%rs9143,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9149,%rs9146,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9152,%rs9149,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9155,%rs9152,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9158,%rs9155,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9161,%rs9158,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9164,%rs9161,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9167,%rs9164,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9170,%rs9167,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9173,%rs9170,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9176,%rs9173,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9179,%rs9176,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9182,%rs9179,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9185,%rs9182,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9188,%rs9185,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9191,%rs9188,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9194,%rs9191,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9197,%rs9194,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9200,%rs9197,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9203,%rs9200,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9206,%rs9203,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9209,%rs9206,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9212,%rs9209,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9215,%rs9212,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9218,%rs9215,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9221,%rs9218,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9224,%rs9221,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9227,%rs9224,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9230,%rs9227,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9233,%rs9230,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9236,%rs9233,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9239,%rs9236,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9242,%rs9239,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9245,%rs9242,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9248,%rs9245,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9251,%rs9248,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9254,%rs9251,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9257,%rs9254,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9260,%rs9257,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9263,%rs9260,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9266,%rs9263,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9269,%rs9266,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9272,%rs9269,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9275,%rs9272,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9278,%rs9275,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9281,%rs9278,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9284,%rs9281,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9287,%rs9284,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9290,%rs9287,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9293,%rs9290,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9296,%rs9293,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9299,%rs9296,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9302,%rs9299,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9305,%rs9302,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9308,%rs9305,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9311,%rs9308,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9314,%rs9311,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9317,%rs9314,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9320,%rs9317,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9323,%rs9320,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9326,%rs9323,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9329,%rs9326,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9332,%rs9329,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9335,%rs9332,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9338,%rs9335,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9341,%rs9338,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9344,%rs9341,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9347,%rs9344,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9350,%rs9347,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9353,%rs9350,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9356,%rs9353,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9359,%rs9356,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9362,%rs9359,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9365,%rs9362,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9368,%rs9365,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9371,%rs9368,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9374,%rs9371,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9377,%rs9374,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9380,%rs9377,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9383,%rs9380,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9386,%rs9383,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9389,%rs9386,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9392,%rs9389,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9395,%rs9392,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9398,%rs9395,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9401,%rs9398,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9404,%rs9401,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9407,%rs9404,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9410,%rs9407,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9413,%rs9410,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9416,%rs9413,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9419,%rs9416,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9422,%rs9419,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9425,%rs9422,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9428,%rs9425,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9431,%rs9428,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9434,%rs9431,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9437,%rs9434,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9440,%rs9437,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9443,%rs9440,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9446,%rs9443,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9449,%rs9446,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9452,%rs9449,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9455,%rs9452,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9458,%rs9455,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9461,%rs9458,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9464,%rs9461,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9467,%rs9464,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9470,%rs9467,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9473,%rs9470,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9476,%rs9473,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9479,%rs9476,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9482,%rs9479,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9485,%rs9482,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9488,%rs9485,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9491,%rs9488,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9494,%rs9491,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9497,%rs9494,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9500,%rs9497,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9503,%rs9500,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9506,%rs9503,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9509,%rs9506,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9512,%rs9509,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9515,%rs9512,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9518,%rs9515,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9521,%rs9518,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9524,%rs9521,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9527,%rs9524,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9530,%rs9527,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9533,%rs9530,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9536,%rs9533,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9539,%rs9536,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9542,%rs9539,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9545,%rs9542,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9548,%rs9545,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9551,%rs9548,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9554,%rs9551,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9557,%rs9554,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9560,%rs9557,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9563,%rs9560,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9566,%rs9563,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9569,%rs9566,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9572,%rs9569,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9575,%rs9572,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9578,%rs9575,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9581,%rs9578,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9584,%rs9581,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9587,%rs9584,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9590,%rs9587,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9593,%rs9590,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9596,%rs9593,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9599,%rs9596,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9602,%rs9599,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9605,%rs9602,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9608,%rs9605,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9611,%rs9608,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9614,%rs9611,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9617,%rs9614,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9620,%rs9617,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9623,%rs9620,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9626,%rs9623,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9629,%rs9626,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9632,%rs9629,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9635,%rs9632,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9638,%rs9635,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9641,%rs9638,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9644,%rs9641,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9647,%rs9644,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9650,%rs9647,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9653,%rs9650,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9656,%rs9653,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9659,%rs9656,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9662,%rs9659,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9665,%rs9662,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9668,%rs9665,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9671,%rs9668,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9674,%rs9671,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9677,%rs9674,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9680,%rs9677,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9683,%rs9680,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9686,%rs9683,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9689,%rs9686,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9692,%rs9689,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9695,%rs9692,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9698,%rs9695,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9701,%rs9698,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9704,%rs9701,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9707,%rs9704,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9710,%rs9707,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9713,%rs9710,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9716,%rs9713,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9719,%rs9716,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9722,%rs9719,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9725,%rs9722,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9728,%rs9725,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9731,%rs9728,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9734,%rs9731,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9737,%rs9734,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9740,%rs9737,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9743,%rs9740,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9746,%rs9743,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9749,%rs9746,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9752,%rs9749,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9755,%rs9752,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9758,%rs9755,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9761,%rs9758,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9764,%rs9761,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9767,%rs9764,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9770,%rs9767,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9773,%rs9770,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9776,%rs9773,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9779,%rs9776,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9782,%rs9779,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9785,%rs9782,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9788,%rs9785,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9791,%rs9788,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9794,%rs9791,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9797,%rs9794,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9800,%rs9797,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9803,%rs9800,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9806,%rs9803,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9809,%rs9806,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9812,%rs9809,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9815,%rs9812,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9818,%rs9815,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9821,%rs9818,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9824,%rs9821,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9827,%rs9824,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9830,%rs9827,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9833,%rs9830,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9836,%rs9833,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9839,%rs9836,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9842,%rs9839,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9845,%rs9842,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9848,%rs9845,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9851,%rs9848,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9854,%rs9851,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9857,%rs9854,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9860,%rs9857,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9863,%rs9860,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9866,%rs9863,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9869,%rs9866,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9872,%rs9869,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9875,%rs9872,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9878,%rs9875,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9881,%rs9878,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9884,%rs9881,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9887,%rs9884,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9890,%rs9887,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9893,%rs9890,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9896,%rs9893,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9899,%rs9896,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9902,%rs9899,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9905,%rs9902,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9908,%rs9905,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9911,%rs9908,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9914,%rs9911,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9917,%rs9914,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9920,%rs9917,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9923,%rs9920,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9926,%rs9923,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9929,%rs9926,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9932,%rs9929,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9935,%rs9932,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9938,%rs9935,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9941,%rs9938,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9944,%rs9941,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9947,%rs9944,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9950,%rs9947,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9953,%rs9950,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9956,%rs9953,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9959,%rs9956,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9962,%rs9959,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9965,%rs9962,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9968,%rs9965,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9971,%rs9968,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9974,%rs9971,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9977,%rs9974,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9980,%rs9977,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9983,%rs9980,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9986,%rs9983,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9989,%rs9986,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9992,%rs9989,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9995,%rs9992,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs9998,%rs9995,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10001,%rs9998,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10004,%rs10001,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10007,%rs10004,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10010,%rs10007,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10013,%rs10010,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10016,%rs10013,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10019,%rs10016,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10022,%rs10019,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10025,%rs10022,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10028,%rs10025,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10031,%rs10028,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10034,%rs10031,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10037,%rs10034,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10040,%rs10037,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10043,%rs10040,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10046,%rs10043,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10049,%rs10046,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10052,%rs10049,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10055,%rs10052,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10058,%rs10055,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10061,%rs10058,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10064,%rs10061,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10067,%rs10064,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10070,%rs10067,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10073,%rs10070,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10076,%rs10073,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10079,%rs10076,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10082,%rs10079,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10085,%rs10082,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10088,%rs10085,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10091,%rs10088,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10094,%rs10091,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10097,%rs10094,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10100,%rs10097,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10103,%rs10100,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10106,%rs10103,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10109,%rs10106,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10112,%rs10109,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10115,%rs10112,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10118,%rs10115,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10121,%rs10118,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10124,%rs10121,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10127,%rs10124,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10130,%rs10127,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10133,%rs10130,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10136,%rs10133,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10139,%rs10136,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10142,%rs10139,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10145,%rs10142,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10148,%rs10145,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10151,%rs10148,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10154,%rs10151,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10157,%rs10154,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10160,%rs10157,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10163,%rs10160,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10166,%rs10163,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10169,%rs10166,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10172,%rs10169,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10175,%rs10172,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10178,%rs10175,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10181,%rs10178,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10184,%rs10181,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10187,%rs10184,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10190,%rs10187,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10193,%rs10190,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10196,%rs10193,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10199,%rs10196,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10202,%rs10199,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10205,%rs10202,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10208,%rs10205,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10211,%rs10208,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10214,%rs10211,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10217,%rs10214,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10220,%rs10217,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10223,%rs10220,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10226,%rs10223,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10229,%rs10226,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10232,%rs10229,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10235,%rs10232,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10238,%rs10235,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10241,%rs10238,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10244,%rs10241,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10247,%rs10244,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10250,%rs10247,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10253,%rs10250,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10256,%rs10253,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10259,%rs10256,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10262,%rs10259,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10265,%rs10262,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10268,%rs10265,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10271,%rs10268,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10274,%rs10271,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10277,%rs10274,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10280,%rs10277,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10283,%rs10280,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10286,%rs10283,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10289,%rs10286,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10292,%rs10289,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10295,%rs10292,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10298,%rs10295,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10301,%rs10298,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10304,%rs10301,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10307,%rs10304,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10310,%rs10307,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10313,%rs10310,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10316,%rs10313,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10319,%rs10316,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10322,%rs10319,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10325,%rs10322,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10328,%rs10325,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10331,%rs10328,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10334,%rs10331,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10337,%rs10334,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10340,%rs10337,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10343,%rs10340,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10346,%rs10343,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10349,%rs10346,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10352,%rs10349,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10355,%rs10352,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10358,%rs10355,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10361,%rs10358,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10364,%rs10361,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10367,%rs10364,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10370,%rs10367,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10373,%rs10370,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10376,%rs10373,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10379,%rs10376,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10382,%rs10379,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10385,%rs10382,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10388,%rs10385,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10391,%rs10388,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10394,%rs10391,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10397,%rs10394,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10400,%rs10397,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10403,%rs10400,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10406,%rs10403,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10409,%rs10406,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10412,%rs10409,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10415,%rs10412,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10418,%rs10415,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10421,%rs10418,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10424,%rs10421,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10427,%rs10424,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10430,%rs10427,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10433,%rs10430,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10436,%rs10433,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10439,%rs10436,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10442,%rs10439,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10445,%rs10442,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10448,%rs10445,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10451,%rs10448,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10454,%rs10451,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10457,%rs10454,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10460,%rs10457,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10463,%rs10460,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10466,%rs10463,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10469,%rs10466,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10472,%rs10469,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10475,%rs10472,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10478,%rs10475,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10481,%rs10478,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10484,%rs10481,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10487,%rs10484,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10490,%rs10487,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10493,%rs10490,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10496,%rs10493,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10499,%rs10496,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10502,%rs10499,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10505,%rs10502,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10508,%rs10505,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10511,%rs10508,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10514,%rs10511,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10517,%rs10514,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10520,%rs10517,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10523,%rs10520,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10526,%rs10523,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10529,%rs10526,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10532,%rs10529,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10535,%rs10532,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10538,%rs10535,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10541,%rs10538,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10544,%rs10541,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10547,%rs10544,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10550,%rs10547,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10553,%rs10550,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10556,%rs10553,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10559,%rs10556,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10562,%rs10559,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10565,%rs10562,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10568,%rs10565,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10571,%rs10568,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10574,%rs10571,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10577,%rs10574,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10580,%rs10577,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10583,%rs10580,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10586,%rs10583,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10589,%rs10586,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10592,%rs10589,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10595,%rs10592,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10598,%rs10595,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10601,%rs10598,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10604,%rs10601,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10607,%rs10604,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10610,%rs10607,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10613,%rs10610,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10616,%rs10613,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10619,%rs10616,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10622,%rs10619,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10625,%rs10622,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10628,%rs10625,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10631,%rs10628,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10634,%rs10631,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10637,%rs10634,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10640,%rs10637,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10643,%rs10640,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10646,%rs10643,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10649,%rs10646,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10652,%rs10649,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10655,%rs10652,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10658,%rs10655,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10661,%rs10658,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10664,%rs10661,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10667,%rs10664,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10670,%rs10667,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10673,%rs10670,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10676,%rs10673,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10679,%rs10676,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10682,%rs10679,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10685,%rs10682,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10688,%rs10685,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10691,%rs10688,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10694,%rs10691,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10697,%rs10694,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10700,%rs10697,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10703,%rs10700,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10706,%rs10703,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10709,%rs10706,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10712,%rs10709,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10715,%rs10712,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10718,%rs10715,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10721,%rs10718,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10724,%rs10721,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10727,%rs10724,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10730,%rs10727,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10733,%rs10730,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10736,%rs10733,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10739,%rs10736,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10742,%rs10739,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10745,%rs10742,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10748,%rs10745,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10751,%rs10748,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10754,%rs10751,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10757,%rs10754,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10760,%rs10757,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10763,%rs10760,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10766,%rs10763,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10769,%rs10766,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10772,%rs10769,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10775,%rs10772,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10778,%rs10775,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10781,%rs10778,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10784,%rs10781,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10787,%rs10784,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10790,%rs10787,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10793,%rs10790,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10796,%rs10793,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10799,%rs10796,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10802,%rs10799,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10805,%rs10802,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10808,%rs10805,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10811,%rs10808,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10814,%rs10811,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10817,%rs10814,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10820,%rs10817,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10823,%rs10820,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10826,%rs10823,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10829,%rs10826,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10832,%rs10829,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10835,%rs10832,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10838,%rs10835,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10841,%rs10838,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10844,%rs10841,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10847,%rs10844,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10850,%rs10847,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10853,%rs10850,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10856,%rs10853,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10859,%rs10856,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10862,%rs10859,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10865,%rs10862,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10868,%rs10865,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10871,%rs10868,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10874,%rs10871,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10877,%rs10874,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10880,%rs10877,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10883,%rs10880,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10886,%rs10883,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10889,%rs10886,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10892,%rs10889,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10895,%rs10892,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10898,%rs10895,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10901,%rs10898,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10904,%rs10901,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10907,%rs10904,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10910,%rs10907,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10913,%rs10910,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10916,%rs10913,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10919,%rs10916,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10922,%rs10919,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10925,%rs10922,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10928,%rs10925,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10931,%rs10928,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10934,%rs10931,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10937,%rs10934,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10940,%rs10937,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10943,%rs10940,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10946,%rs10943,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10949,%rs10946,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10952,%rs10949,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10955,%rs10952,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10958,%rs10955,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10961,%rs10958,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10964,%rs10961,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10967,%rs10964,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10970,%rs10967,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10973,%rs10970,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10976,%rs10973,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10979,%rs10976,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10982,%rs10979,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10985,%rs10982,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10988,%rs10985,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10991,%rs10988,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10994,%rs10991,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs10997,%rs10994,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11000,%rs10997,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11003,%rs11000,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11006,%rs11003,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11009,%rs11006,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11012,%rs11009,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11015,%rs11012,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11018,%rs11015,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11021,%rs11018,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11024,%rs11021,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11027,%rs11024,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11030,%rs11027,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11033,%rs11030,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11036,%rs11033,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11039,%rs11036,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11042,%rs11039,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11045,%rs11042,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11048,%rs11045,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11051,%rs11048,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11054,%rs11051,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11057,%rs11054,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11060,%rs11057,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11063,%rs11060,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11066,%rs11063,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11069,%rs11066,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11072,%rs11069,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11075,%rs11072,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11078,%rs11075,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11081,%rs11078,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11084,%rs11081,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11087,%rs11084,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11090,%rs11087,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11093,%rs11090,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11096,%rs11093,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11099,%rs11096,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11102,%rs11099,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11105,%rs11102,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11108,%rs11105,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11111,%rs11108,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11114,%rs11111,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11117,%rs11114,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11120,%rs11117,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11123,%rs11120,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11126,%rs11123,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11129,%rs11126,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11132,%rs11129,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11135,%rs11132,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11138,%rs11135,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11141,%rs11138,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11144,%rs11141,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11147,%rs11144,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11150,%rs11147,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11153,%rs11150,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11156,%rs11153,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11159,%rs11156,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11162,%rs11159,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11165,%rs11162,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11168,%rs11165,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11171,%rs11168,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11174,%rs11171,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11177,%rs11174,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11180,%rs11177,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11183,%rs11180,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11186,%rs11183,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11189,%rs11186,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11192,%rs11189,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11195,%rs11192,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11198,%rs11195,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11201,%rs11198,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11204,%rs11201,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11207,%rs11204,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11210,%rs11207,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11213,%rs11210,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11216,%rs11213,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11219,%rs11216,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11222,%rs11219,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11225,%rs11222,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11228,%rs11225,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11231,%rs11228,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11234,%rs11231,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11237,%rs11234,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11240,%rs11237,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11243,%rs11240,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11246,%rs11243,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11249,%rs11246,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11252,%rs11249,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11255,%rs11252,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11258,%rs11255,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11261,%rs11258,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11264,%rs11261,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11267,%rs11264,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11270,%rs11267,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11273,%rs11270,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11276,%rs11273,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11279,%rs11276,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11282,%rs11279,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11285,%rs11282,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11288,%rs11285,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11291,%rs11288,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11294,%rs11291,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11297,%rs11294,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11300,%rs11297,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11303,%rs11300,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11306,%rs11303,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11309,%rs11306,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11312,%rs11309,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11315,%rs11312,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11318,%rs11315,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11321,%rs11318,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11324,%rs11321,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11327,%rs11324,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11330,%rs11327,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11333,%rs11330,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11336,%rs11333,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11339,%rs11336,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11342,%rs11339,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11345,%rs11342,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11348,%rs11345,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11351,%rs11348,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11354,%rs11351,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11357,%rs11354,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11360,%rs11357,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11363,%rs11360,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11366,%rs11363,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11369,%rs11366,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11372,%rs11369,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11375,%rs11372,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11378,%rs11375,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11381,%rs11378,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11384,%rs11381,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11387,%rs11384,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11390,%rs11387,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11393,%rs11390,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11396,%rs11393,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11399,%rs11396,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11402,%rs11399,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11405,%rs11402,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11408,%rs11405,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11411,%rs11408,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11414,%rs11411,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11417,%rs11414,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11420,%rs11417,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11423,%rs11420,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11426,%rs11423,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11429,%rs11426,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11432,%rs11429,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11435,%rs11432,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11438,%rs11435,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11441,%rs11438,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11444,%rs11441,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11447,%rs11444,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11450,%rs11447,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11453,%rs11450,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11456,%rs11453,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11459,%rs11456,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11462,%rs11459,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11465,%rs11462,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11468,%rs11465,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11471,%rs11468,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11474,%rs11471,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11477,%rs11474,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11480,%rs11477,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11483,%rs11480,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11486,%rs11483,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11489,%rs11486,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11492,%rs11489,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11495,%rs11492,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11498,%rs11495,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11501,%rs11498,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11504,%rs11501,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11507,%rs11504,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11510,%rs11507,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11513,%rs11510,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11516,%rs11513,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11519,%rs11516,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11522,%rs11519,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11525,%rs11522,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11528,%rs11525,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11531,%rs11528,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11534,%rs11531,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11537,%rs11534,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11540,%rs11537,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11543,%rs11540,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11546,%rs11543,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11549,%rs11546,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11552,%rs11549,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11555,%rs11552,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11558,%rs11555,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11561,%rs11558,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11564,%rs11561,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11567,%rs11564,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11570,%rs11567,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11573,%rs11570,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11576,%rs11573,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11579,%rs11576,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11582,%rs11579,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11585,%rs11582,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11588,%rs11585,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11591,%rs11588,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11594,%rs11591,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11597,%rs11594,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11600,%rs11597,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11603,%rs11600,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11606,%rs11603,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11609,%rs11606,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11612,%rs11609,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11615,%rs11612,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11618,%rs11615,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11621,%rs11618,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11624,%rs11621,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11627,%rs11624,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11630,%rs11627,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11633,%rs11630,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11636,%rs11633,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11639,%rs11636,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11642,%rs11639,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11645,%rs11642,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11648,%rs11645,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11651,%rs11648,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11654,%rs11651,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11657,%rs11654,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11660,%rs11657,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11663,%rs11660,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11666,%rs11663,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11669,%rs11666,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11672,%rs11669,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11675,%rs11672,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11678,%rs11675,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11681,%rs11678,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11684,%rs11681,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11687,%rs11684,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11690,%rs11687,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11693,%rs11690,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11696,%rs11693,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11699,%rs11696,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11702,%rs11699,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11705,%rs11702,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11708,%rs11705,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11711,%rs11708,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11714,%rs11711,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11717,%rs11714,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11720,%rs11717,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11723,%rs11720,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11726,%rs11723,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11729,%rs11726,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11732,%rs11729,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11735,%rs11732,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11738,%rs11735,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11741,%rs11738,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11744,%rs11741,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11747,%rs11744,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11750,%rs11747,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11753,%rs11750,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11756,%rs11753,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11759,%rs11756,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11762,%rs11759,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11765,%rs11762,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11768,%rs11765,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11771,%rs11768,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11774,%rs11771,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11777,%rs11774,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11780,%rs11777,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11783,%rs11780,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11786,%rs11783,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11789,%rs11786,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11792,%rs11789,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11795,%rs11792,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11798,%rs11795,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11801,%rs11798,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11804,%rs11801,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11807,%rs11804,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11810,%rs11807,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11813,%rs11810,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11816,%rs11813,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11819,%rs11816,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11822,%rs11819,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11825,%rs11822,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11828,%rs11825,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11831,%rs11828,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11834,%rs11831,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11837,%rs11834,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11840,%rs11837,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11843,%rs11840,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11846,%rs11843,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11849,%rs11846,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11852,%rs11849,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11855,%rs11852,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11858,%rs11855,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11861,%rs11858,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11864,%rs11861,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11867,%rs11864,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11870,%rs11867,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11873,%rs11870,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11876,%rs11873,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11879,%rs11876,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11882,%rs11879,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11885,%rs11882,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11888,%rs11885,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11891,%rs11888,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11894,%rs11891,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11897,%rs11894,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11900,%rs11897,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11903,%rs11900,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11906,%rs11903,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11909,%rs11906,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11912,%rs11909,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11915,%rs11912,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11918,%rs11915,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11921,%rs11918,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11924,%rs11921,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11927,%rs11924,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11930,%rs11927,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11933,%rs11930,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11936,%rs11933,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11939,%rs11936,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11942,%rs11939,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11945,%rs11942,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11948,%rs11945,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11951,%rs11948,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11954,%rs11951,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11957,%rs11954,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11960,%rs11957,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11963,%rs11960,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11966,%rs11963,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11969,%rs11966,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11972,%rs11969,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11975,%rs11972,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11978,%rs11975,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11981,%rs11978,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11984,%rs11981,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11987,%rs11984,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11990,%rs11987,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11993,%rs11990,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11996,%rs11993,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs11999,%rs11996,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs12002,%rs11999,%rs7;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs12009,%rs12002,%rs7;
}
	// end inline asm
	// begin inline asm
	mov.u64 %rd6, %globaltimer;
	// end inline asm
	setp.gt.u64 	%p2, %rd1, %rd6;
	@%p2 bra 	$L__BB4_2;

$L__BB4_3:
	ld.param.u64 	%rd8, [doWorkloadFP16_param_0];
	setp.eq.s64 	%p3, %rd8, 0;
	@%p3 bra 	$L__BB4_5;

	ld.param.u64 	%rd9, [doWorkloadFP16_param_0];
	cvta.to.global.u64 	%rd7, %rd9;
	st.global.u16 	[%rd7], %rs12009;

$L__BB4_5:
	ret;

}

