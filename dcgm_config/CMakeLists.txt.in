#
# Copyright (c) 2025, NVIDIA CORPORATION.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
cmake_minimum_required(VERSION 3.16.0)

# References to ${CMAKE_PROJECT_VERSION} below will return the full version,
# including the revision
project(datacenter-gpu-manager-4-config
    VERSION @PROJECT_VERSION@.@DCGM_CONFIG_REVISION@
    LANGUAGES NONE
    DESCRIPTION "Auxiliary definitions for NVIDIAÂ® Datacenter GPU Management Tools")

set(DCGM_ROOT_DIR "@CMAKE_SOURCE_DIR@")

set(DCGM_NVVS_SRC_DIR "${DCGM_ROOT_DIR}/nvvs")
set(DCGM_NVVS_INSTALL_DIR "@CMAKE_INSTALL_DATAROOTDIR@/@PROJECT_NAME@")

configure_file("${DCGM_NVVS_SRC_DIR}/diag-skus.yaml.in" diag-skus.yaml @ONLY)

install(FILES "${CMAKE_CURRENT_BINARY_DIR}/diag-skus.yaml"
        DESTINATION ${DCGM_NVVS_INSTALL_DIR})

set(CPACK_PACKAGE_VERSION "${PROJECT_VERSION}")
set(CPACK_PROJECT_CONFIG_FILE "${DCGM_ROOT_DIR}/cmake/packaging.cmake")
set(CPACK_RESOURCE_FILE_LICENSE "@CPACK_RESOURCE_FILE_LICENSE@")

set(CPACK_ARCHIVE_COMPONENT_INSTALL OFF)
set(CPACK_DEB_COMPONENT_INSTALL OFF)
set(CPACK_RPM_COMPONENT_INSTALL OFF)

set(CPACK_DEBIAN_DEBUGINFO_PACKAGE OFF)
set(CPACK_DEBIAN_PACKAGE_ARCHITECTURE all)
string(JOIN ", " CPACK_DEBIAN_PACKAGE_DEPENDS
    "datacenter-gpu-manager-4 (>= @CPACK_DEBIAN_PACKAGE_EPOCH@:@PROJECT_VERSION@~0)"
    "datacenter-gpu-manager-4 (<= @CPACK_DEBIAN_PACKAGE_EPOCH@:@PROJECT_VERSION@)")

string(JOIN "_" CPACK_DEBIAN_FILE_NAME
    "${PROJECT_NAME}"
    "${PROJECT_VERSION}"
    "${CPACK_DEBIAN_PACKAGE_ARCHITECTURE}.deb")

set(CPACK_RPM_DEBUGINFO_PACKAGE OFF)
set(CPACK_RPM_PACKAGE_ARCHITECTURE noarch)
string(JOIN ", " CPACK_RPM_PACKAGE_REQUIRES
    "datacenter-gpu-manager-4 >= @CPACK_RPM_PACKAGE_EPOCH@:@PROJECT_VERSION@~0"
    "datacenter-gpu-manager-4 <= @CPACK_DEBIAN_PACKAGE_EPOCH@:@PROJECT_VERSION@")

set(CPACK_OBJDUMP "@CMAKE_OBJDUMP@")
set(CPACK_STRIP "@CMAKE_STRIP@")
set(CPACK_VMWARE "${VMWARE}")

include(CPack)
